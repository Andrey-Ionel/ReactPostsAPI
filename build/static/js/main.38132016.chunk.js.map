{"version":3,"sources":["utils/fetcher.js","api/index.js","PostsContext.js","components/Pagination/Pagination.js","components/AlbumsCard/AlbumsCard.js","components/LMButton/LMButton.js","components/Favorite/FavoriteAlbums.js","components/Navigation/NavigationAlbums.js","containers/Albums/Albums.js","components/Favorite/FavoritePosts.js","components/Navigation/NavigationPosts.js","components/Comments/Comments.js","components/Post/Post.js","components/PostscardPostsgrid/PostscardPostsgrid.js","components/Filters/Filters.js","components/Hooks/UseDebounce.js","containers/Postsgrid/Postsgrid.js","components/PostscardPostsLists/PostscardPostsLists.js","containers/Postslists/PostsLists.js","components/Hooks/ScrollToTop.js","App.js","index.js"],"names":["fetcher","pathname","a","options","fetch","process","method","headers","Accept","responsse","json","getPostsRequest","getCommentsRequest","patchFavoritePostsRequest","id","favoritePost","body","JSON","stringify","patchFavoriteAlbumsRequest","favoriteAlbum","createCommentRequest","PostsContext","createContext","PostsProvider","children","useState","posts","setPosts","currentPage","setCurrentPage","postsQuantityPage","setPostsQuantityPage","orderValue","setOrderValue","isSearching","setIsSearching","errorFetch","setErrorFetch","indexOfLastPost","indexOfFirstPost","totalPosts","Math","ceil","length","currentPageCards","slice","useEffect","then","newPosts","error","value","getSortPostsRequest","favorite","getSearchPostsRequest","paginate","pageNumber","setQuantityPosts","addMorePosts","addPosts","parseInt","toggleFavoritePosts","favoritePostToggle","map","post","undefined","toggleFavoriteAlbums","favoriteAlbumsToggle","album","status","title","subTitle","Provider","usePostsContext","useContext","Pagination","pageNumbers","i","push","nextPage","previousPage","className","uk-margin","onClick","href","e","preventDefault","uk-pagination-previous","number","uk-pagination-next","AlbumsCard","src","alt","uk-cover","width","height","uk-icon","React","memo","LMButton","uk-spinner","FavoriteAlbums","type","NavigationAlbums","favoriteAlbums","filter","uk-navbar","location","uk-dropdown","uk-grid","Albums","icon","FrownTwoTone","FavoritePosts","NavigationPosts","favoritePosts","Comments","author","email","commentTitle","Post","props","comments","setComments","setAuthor","setEmail","setCommentTitle","newComments","comment","addNewComment","trim","newComment","onKeyPressDefault","charCode","history","goBack","LeftCircleTwoTone","postTitle","to","postBody","path","action","placeholder","required","onChange","target","onKeyPress","rows","Date","now","PostscardPostsgrid","Filters","name","setName","setearchResults","debouncedValue","delay","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","results","isActive","uk-search-icon","activeClassName","Postsgrid","PostscardPostsLists","Postslists","withRouter","unlisten","listen","window","scrollTo","App","exact","component","Uikit","use","Icons","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.38132016.chunk.js","sourcesContent":["const fetcher = async (pathname, options = {}) => {\r\n  if (!process.env.REACT_APP_API_URL) {\r\n    console.log(\"Забыли указать переменную окружения\");\r\n  }\r\n\r\n  try {\r\n    const responsse = await fetch(`${process.env.REACT_APP_API_URL}${pathname}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json; charset=UTF-8\"\r\n      },\r\n      ...options\r\n    });\r\n    return await responsse.json();\r\n\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n\r\n};\r\nexport default fetcher;\r\n","import fetcher from \"../utils/fetcher\";\n\nconst getPostsRequest = async () => {\n  return await fetcher(\"/posts\");\n}\n\nconst getCommentsRequest = async () => {\n  return await fetcher(\"/comments\");\n}\n\n\nconst patchFavoritePostsRequest = async (id, favoritePost) => {\n  return await fetcher(`/posts/${id}`, {\n    method: \"PATCH\",\n    body: JSON.stringify({\n      favoritePost,\n    }),\n  });\n};\n\nconst patchFavoriteAlbumsRequest = async (id, favoriteAlbum) => {\n  return await fetcher(`/posts/${id}`, {\n    method: \"PATCH\",\n    body: JSON.stringify({\n      favoriteAlbum,\n    }),\n  });\n};\n\nconst createCommentRequest = async (body) => {\n  return await fetcher(\"/comments\", {\n    method: \"POST\",\n    body: JSON.stringify(body),\n  });\n};\n\nexport { getPostsRequest, patchFavoritePostsRequest, patchFavoriteAlbumsRequest, createCommentRequest, getCommentsRequest };\n\n","import { useState, createContext, useEffect, useContext } from \"react\";\r\nimport { getPostsRequest, patchFavoritePostsRequest, patchFavoriteAlbumsRequest } from \"./api\";\r\nimport fetcher from \"./utils/fetcher\";\r\nimport { Result } from 'antd';\r\n\r\nconst PostsContext = createContext(null);\r\n\r\nconst PostsProvider = ({ children }) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsQuantityPage, setPostsQuantityPage] = useState(6);\r\n  const [orderValue, setOrderValue] = useState(\"asc\");\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [errorFetch, setErrorFetch] = useState(null);\r\n\r\n  const indexOfLastPost = currentPage * postsQuantityPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsQuantityPage;\r\n  const totalPosts = Math.ceil(posts.length / postsQuantityPage);\r\n\r\n  const currentPageCards = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  useEffect(() => {\r\n    getPostsRequest().then((newPosts) => setPosts(newPosts),\r\n      (error) => setErrorFetch(error));\r\n  }, []);\r\n\r\n  useEffect((value) => {\r\n    if (value !== value) {\r\n      getSortPostsRequest(value);\r\n    }\r\n  }, []);\r\n\r\n  useEffect((favorite) => {\r\n    if (favorite !== favorite) {\r\n      patchFavoritePostsRequest(id);\r\n    }\r\n  }, []);\r\n\r\n  const getSearchPostsRequest = async (value) => {\r\n    await fetcher(`/posts?title_like=${value}`)\r\n      .then((newPosts) => {\r\n        setPosts(newPosts);\r\n        setIsSearching(false);\r\n      });\r\n  }\r\n\r\n  const getSortPostsRequest = async (value) => {\r\n    return await fetcher(`/posts?_sort=id&_order=${value}`)\r\n      .then((newPosts) => setPosts(newPosts));\r\n  }\r\n\r\n  const setQuantityPosts = (value) => {\r\n    setPostsQuantityPage(value);\r\n  }\r\n\r\n  const addMorePosts = (value) => {\r\n    const addPosts = (parseInt(value) + 6);\r\n    setPostsQuantityPage(addPosts);\r\n  }\r\n\r\n  const toggleFavoritePosts = (id) => {\r\n    const favoritePostToggle = posts?.map((post) => {\r\n      if (post.id === id && post.favoritePost === undefined) {\r\n        post.favoritePost = true;\r\n        patchFavoritePostsRequest(id, post.favoritePost)\r\n      } else if (post.id === id && post.favoritePost === false) {\r\n        post.favoritePost = true;\r\n        patchFavoritePostsRequest(id, post.favoritePost)\r\n      } else if (post.id === id && post.favoritePost === true) {\r\n        post.favoritePost = false;\r\n        patchFavoritePostsRequest(id, post.favoritePost)\r\n      }\r\n      return post;\r\n    })\r\n    setPosts(favoritePostToggle);\r\n  }\r\n\r\n  const toggleFavoriteAlbums = (id) => {\r\n    const favoriteAlbumsToggle = posts?.map((album) => {\r\n      if (album.id === id && album.favoriteAlbum === undefined) {\r\n        album.favoriteAlbum = true;\r\n        patchFavoriteAlbumsRequest(id, album.favoriteAlbum)\r\n      } else if (album.id === id && album.favoriteAlbum === false) {\r\n        album.favoriteAlbum = true;\r\n        patchFavoriteAlbumsRequest(id, album.favoriteAlbum)\r\n      } else if (album.id === id && album.favoriteAlbum === true) {\r\n        album.favoriteAlbum = false;\r\n        patchFavoriteAlbumsRequest(id, album.favoriteAlbum)\r\n      }\r\n      return album;\r\n    })\r\n    setPosts(favoriteAlbumsToggle);\r\n  }\r\n\r\n  const value = {\r\n    posts,\r\n    currentPageCards,\r\n    postsQuantityPage,\r\n    totalPosts,\r\n    paginate,\r\n    currentPage,\r\n    getSortPostsRequest,\r\n    getSearchPostsRequest,\r\n    setQuantityPosts,\r\n    setPosts,\r\n    addMorePosts,\r\n    toggleFavoritePosts,\r\n    toggleFavoriteAlbums,\r\n    isSearching,\r\n    setIsSearching,\r\n    orderValue,\r\n    setOrderValue\r\n  }\r\n  if (errorFetch) {\r\n    return <Result\r\n      status=\"500\"\r\n      title=\"500\"\r\n      subTitle=\"Sorry, something went wrong.\"\r\n    />\r\n  } else {\r\n    return (\r\n      <PostsContext.Provider value={value}>\r\n        {children}\r\n      </PostsContext.Provider>\r\n    );\r\n  }\r\n};\r\n\r\nconst usePostsContext = () => useContext(PostsContext);\r\nexport { PostsContext, PostsProvider, usePostsContext };","import { usePostsContext } from \"../../PostsContext\";\r\n\r\nexport function Pagination() {\r\n  const { totalPosts, paginate, currentPage } = usePostsContext();\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= totalPosts; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  const nextPage = () => {\r\n    if ((parseInt(currentPage) + 1) <= totalPosts) {\r\n      return (parseInt(currentPage) + 1);\r\n    }\r\n    return currentPage;\r\n  }\r\n\r\n  const previousPage = () => {\r\n    if ((parseInt(currentPage) - 1) >= 1) {\r\n      return (parseInt(currentPage) - 1);\r\n    }\r\n    return currentPage;\r\n  }\r\n  return (\r\n    <ul\r\n      className=\"uk-pagination uk-flex-center uk-flex-middle\"\r\n      uk-margin=\"true\"\r\n    >\r\n      <li onClick={() => paginate(previousPage)}>\r\n        <a href=\"#\" onClick={(e) => e.preventDefault()}>\r\n          <span uk-pagination-previous=\"true\"></span>\r\n        </a>\r\n      </li>\r\n      {pageNumbers.map((number) => (\r\n        <li key={number} onClick={() => paginate(number)} className={(number === currentPage) ? \"uk-active\" : \"\"}>\r\n          {(number === currentPage) ? <span >{number}</span> : <a href=\"#\" onClick={(e) => e.preventDefault()}>{number}</a>}\r\n        </li>\r\n      ))\r\n      }\r\n      {/* <li className=\"uk-disabled\"><span>...</span></li> */}\r\n      <li onClick={() => paginate(nextPage)} >\r\n        <a href=\"#\" onClick={(e) => e.preventDefault()}>\r\n          <span uk-pagination-next=\"true\"></span>\r\n        </a>\r\n      </li>\r\n    </ul >\r\n  )\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport \"./AlbumsCard.css\";\r\nimport React from \"react\";\r\n\r\nfunction AlbumsCard({ title, id, toggleFavoriteAlbums, favoriteAlbum }) {\r\n  const onClickFavorite = (e) => {\r\n    e.preventDefault();\r\n    toggleFavoriteAlbums(id);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"uk-card uk-card-default uk-margin-medium-bottom uk-light\">\r\n        <img\r\n          src=\"https://picsum.photos/600/400\"\r\n          alt=\"\"\r\n          uk-cover=\"true\"\r\n        />\r\n        <canvas width=\"600\" height=\"400\"></canvas>\r\n        <div className=\"uk-overlay-primary uk-position-cover\"></div>\r\n        <div className=\"uk-overlay uk-overlay-primary uk-position-bottom\">\r\n          <p>\r\n            {title}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"uk-position-top-right uk-overlay\">\r\n          <a href=\"\" uk-icon=\"icon: heart; ratio: 2\" onClick={onClickFavorite} className={favoriteAlbum === true ? \"uk-icon favorite-active\" : \"uk-icon\"}></a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nAlbumsCard.propTypes = {\r\n  id: PropTypes.number,\r\n  title: PropTypes.string,\r\n  favoriteAlbum: PropTypes.bool,\r\n  toggleFavoriteAlbums: PropTypes.func\r\n}\r\n\r\nexport default React.memo(AlbumsCard);","import { usePostsContext } from \"../../PostsContext\";\r\n\r\nexport function LMButton() {\r\n  const { addMorePosts, postsQuantityPage, posts } = usePostsContext();\r\n  return (\r\n    <div className=\"uk-margin\">\r\n      <button className=\"uk-button uk-button-primary uk-width-1-1 uk-margin-small-bottom\" onClick={() => addMorePosts(postsQuantityPage)}>\r\n        Load more{\" \"}\r\n        {posts < 1 && <div\r\n          className=\"uk-margin-small-left\"\r\n          uk-spinner=\"ratio: 0.6\"\r\n        >\r\n        </div>}\r\n      </button>\r\n    </div>\r\n  )\r\n}","import PropTypes from \"prop-types\";\r\nimport \"./Favorite.css\";\r\n\r\nfunction FavoriteAlbums({ title, id, toggleFavoriteAlbums }) {\r\n  return (\r\n    <tbody>\r\n      <tr>\r\n        <td>{title}</td>\r\n        <td className=\"uk-text-right\">\r\n          <button\r\n            className=\"uk-button\"\r\n            type=\"button\"\r\n            uk-icon=\"icon: close;\"\r\n            onClick={() => toggleFavoriteAlbums(id)}\r\n          ></button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  )\r\n}\r\n\r\nFavoriteAlbums.propTypes = {\r\n  id: PropTypes.number,\r\n  title: PropTypes.string,\r\n  toggleFavoriteAlbums: PropTypes.func\r\n}\r\n\r\nexport default FavoriteAlbums;","import FavoriteAlbums from \"../Favorite/FavoriteAlbums\";\r\nimport { usePostsContext } from \"../../PostsContext\";\r\nimport React from \"react\";\r\n\r\nfunction NavigationAlbums() {\r\n  const { posts, toggleFavoriteAlbums } = usePostsContext();\r\n  const favoriteAlbums = posts.filter((album) => {\r\n    if (album.favoriteAlbum === true) {\r\n      return album.favoriteAlbum;\r\n    }\r\n  })\r\n\r\n  return (\r\n    <nav className=\"uk-navbar uk-navbar-container\" uk-navbar=\"true\">\r\n      <div className=\"uk-navbar-left\">\r\n        <ul className=\"uk-navbar-nav\">\r\n          <li className={location.pathname === \"/\"\r\n            || location.pathname === \"/Postsgrid\"\r\n            ? \"uk-active\" : \"\"}>\r\n            <a href=\"/\">Posts</a>\r\n          </li>\r\n          <li className={location.pathname === \"/Albums\"\r\n            ? \"uk-active\" : \"\"}>\r\n            <a href=\"/Albums\">Albums</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"uk-navbar-right\">\r\n        <div className=\"uk-navbar-item\">\r\n          <button\r\n            className={favoriteAlbums.length\r\n              ? \"uk-button favorite-active\" : \"uk-button\"}\r\n            type=\"button\"\r\n            uk-icon=\"icon: heart; ratio: 2\"\r\n          ></button>\r\n          <div className=\"uk-width-large\" uk-dropdown=\"mode: click\">\r\n            <div\r\n              className=\"uk-dropdown-grid uk-child-width-1-1@m\"\r\n              uk-grid=\"true\"\r\n            >\r\n              <div>\r\n                <table className=\"uk-table uk-table-divider uk-table-justify\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Title</th>\r\n                      <th className=\"uk-text-right\">Delete</th>\r\n                    </tr>\r\n                  </thead>\r\n                  {\r\n                    favoriteAlbums.map((album) => (\r\n                      <FavoriteAlbums\r\n                        key={album.id}\r\n                        title={album.title}\r\n                        id={album.id}\r\n                        toggleFavoriteAlbums={toggleFavoriteAlbums}\r\n                      />\r\n                    ))\r\n                  }\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default React.memo(NavigationAlbums);","import { Pagination } from \"../../components/Pagination/Pagination\";\r\nimport { usePostsContext } from \"../../PostsContext\";\r\nimport AlbumsCard from \"../../components/AlbumsCard/AlbumsCard\";\r\nimport { LMButton } from \"../../components/LMButton/LMButton\";\r\nimport NavigationAlbums from \"../../components/Navigation/NavigationAlbums\";\r\nimport { Result } from 'antd';\r\nimport { FrownTwoTone } from '@ant-design/icons';\r\n\r\nexport function Albums() {\r\n  const { currentPageCards, toggleFavoriteAlbums } = usePostsContext();\r\n  return (\r\n    <main className=\"uk-main\">\r\n      <NavigationAlbums />\r\n      <div className=\"uk-section\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid uk-child-width-1-2@s uk-child-width-1-3@m\">\r\n            {currentPageCards.length > 0 ?\r\n              currentPageCards?.map((album) => (\r\n                <AlbumsCard key={album.id}\r\n                  id={album.id}\r\n                  title={album.title}\r\n                  toggleFavoriteAlbums={toggleFavoriteAlbums}\r\n                  favoriteAlbum={album.favoriteAlbum}\r\n                />\r\n              ))\r\n              : <div className=\"uk-align-center\">\r\n                <Result\r\n                  icon={<FrownTwoTone />}\r\n                  title=\"Sorry, albums not found.\"\r\n                />\r\n              </div>}\r\n          </div>\r\n          <LMButton />\r\n          <Pagination />\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport \"./Favorite.css\";\r\n\r\nfunction FavoritePosts({ title, id, toggleFavoritePosts }) {\r\n  return (\r\n    <tbody>\r\n      <tr>\r\n        <td>{title}</td>\r\n        <td className=\"uk-text-right\">\r\n          <button\r\n            className=\"uk-button\"\r\n            type=\"button\"\r\n            uk-icon=\"icon: close;\"\r\n            onClick={() => toggleFavoritePosts(id)}\r\n          ></button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  )\r\n}\r\n\r\nFavoritePosts.propTypes = {\r\n  id: PropTypes.number,\r\n  title: PropTypes.string,\r\n  toggleFavoritePosts: PropTypes.func\r\n}\r\n\r\nexport default FavoritePosts;","import FavoritePosts from \"../Favorite/FavoritePosts\";\r\nimport { usePostsContext } from \"../../PostsContext\";\r\nimport React from \"react\";\r\n\r\nfunction NavigationPosts() {\r\n  const { posts, toggleFavoritePosts } = usePostsContext();\r\n  const favoritePosts = posts.filter((post) => {\r\n    if (post.favoritePost === true) {\r\n      return post.favoritePost;\r\n    }\r\n  })\r\n\r\n  return (\r\n    <nav className=\"uk-navbar uk-navbar-container\" uk-navbar=\"true\">\r\n      <div className=\"uk-navbar-left\">\r\n        <ul className=\"uk-navbar-nav\">\r\n          <li className={location.pathname === \"/\"\r\n            || location.pathname === \"/Postsgrid\"\r\n            ? \"uk-active\" : \"\"}>\r\n            <a href=\"/\">Posts</a>\r\n          </li>\r\n          <li className={location.pathname === \"/Albums\"\r\n            ? \"uk-active\" : \"\"}>\r\n            <a href=\"/Albums\">Albums</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"uk-navbar-right\">\r\n        <div className=\"uk-navbar-item\">\r\n          <button\r\n            className={favoritePosts.length\r\n              ? \"uk-button favorite-active\" : \"uk-button\"}\r\n            type=\"button\"\r\n            uk-icon=\"icon: heart; ratio: 2\"\r\n          ></button>\r\n          <div className=\"uk-width-large\" uk-dropdown=\"mode: click\">\r\n            <div\r\n              className=\"uk-dropdown-grid uk-child-width-1-1@m\"\r\n              uk-grid=\"true\"\r\n            >\r\n              <div>\r\n                <table className=\"uk-table uk-table-divider uk-table-justify\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Title</th>\r\n                      <th className=\"uk-text-right\">Delete</th>\r\n                    </tr>\r\n                  </thead>\r\n                  {\r\n                    favoritePosts.map((post) => (\r\n                      <FavoritePosts\r\n                        key={post.id}\r\n                        title={post.title}\r\n                        id={post.id}\r\n                        toggleFavoritePosts={toggleFavoritePosts}\r\n                      />\r\n                    ))\r\n                  }\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default React.memo(NavigationPosts);","import PropTypes from \"prop-types\";\r\n\r\nfunction Comments({ author, email, commentTitle }) {\r\n  return (\r\n    <div className=\"uk-comments\">\r\n      <article className=\"uk-comment\">\r\n        <header className=\"uk-comment-header uk-grid uk-grid-medium uk-flex-middle\">\r\n          <div className=\"uk-width-expand\">\r\n            <h4 className=\"uk-comment-title uk-margin-remove\">\r\n              <a className=\"uk-link-reset\"\r\n                href=\"#\"\r\n                onClick={(e) => e.preventDefault()}>\r\n                Author: {author}\r\n              </a>\r\n            </h4>\r\n            <ul className=\"uk-comment-meta uk-subnav uk-subnav-divider uk-margin-remove-top\">\r\n              <li>\r\n                <a href=\"#\"\r\n                  onClick={(e) => e.preventDefault()}>\r\n                  Email: {email}</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </header>\r\n        <div className=\"uk-comment-body\">\r\n          <p>\r\n            {commentTitle}\r\n          </p>\r\n        </div>\r\n      </article>\r\n    </div>\r\n  )\r\n}\r\n\r\nComments.propTypes = {\r\n  author: PropTypes.string,\r\n  email: PropTypes.string,\r\n  commentTitle: PropTypes.string,\r\n}\r\n\r\nexport default Comments;","import \"./Post.css\";\r\nimport NavigationPosts from \"../Navigation/NavigationPosts\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Comments from \"../Comments/Comments\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { createCommentRequest, getCommentsRequest } from \"../../api\";\r\nimport { LeftCircleTwoTone } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\n\r\n\r\nexport function Post(props) {\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [commentTitle, setCommentTitle] = useState(\"\");\r\n\r\n  const onAddAuthor = (e) => (setAuthor(e.target.value));\r\n\r\n  const onAddEmail = (e) => (setEmail(e.target.value));\r\n\r\n  const onAddComment = (e) => (setCommentTitle(e.target.value));\r\n\r\n  const onClickDataSend = (e) => {\r\n    addNewComment({\r\n      path: location.pathname,\r\n      id: Date.now(),\r\n      author: author,\r\n      email: email,\r\n      commentTitle: commentTitle\r\n    })\r\n    setAuthor(\"\");\r\n    setEmail(\"\");\r\n    setCommentTitle(\"\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCommentsRequest().then((newComments) => setComments(newComments));\r\n  }, []);\r\n\r\n  useEffect((comment) => {\r\n    if (comments.comment !== comments.comment) {\r\n      createCommentRequest(comment);\r\n    }\r\n    return () => {\r\n      setComments([])\r\n    }\r\n  }, []);\r\n\r\n  const addNewComment = async (comment) => {\r\n    if (comment.commentTitle.trim() && comment.email.trim() && comment.author.trim()) {\r\n      const newComment = await createCommentRequest(comment);\r\n      setComments([...comments, newComment]);\r\n    }\r\n  }\r\n\r\n  const onKeyPressDefault = (e) => {\r\n    if (e.charCode === 13) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main className=\"uk-main\">\r\n      <NavigationPosts />\r\n      <div className=\"two-tone\">\r\n        <Button type=\"primary\"\r\n          onClick={() => props.history.goBack()}>\r\n          <LeftCircleTwoTone className=\"antd-back-icon\" />\r\n          BACK...\r\n        </Button>\r\n      </div>\r\n      <div className=\"uk-section\">\r\n        <div className=\"uk-container\">\r\n          <h1 className=\"uk-heading-bullet uk-margin-medium-bottom\">\r\n            <span>{props.location.postTitle === undefined\r\n              ? <Redirect to=\"/\" />\r\n              : props.location.postTitle}\r\n            </span>\r\n            <a className=\"uk-text-small\" href=\"#\"> Author\r\n            </a>\r\n          </h1>\r\n          <div className=\"uk-article uk-dropcap uk-margin-large-bottom\">\r\n            <p>\r\n              {props.location.postBody === undefined\r\n                ? <Redirect to=\"/\" />\r\n                : props.location.postBody}.\r\n            </p>\r\n          </div>\r\n          <hr />\r\n          <h3 className=\"uk-margin-remove-top\">Comments:</h3>\r\n          {\r\n            comments?.map((comment) => (\r\n              comment.path === props.location.pathname ?\r\n                <Comments\r\n                  key={comment.id}\r\n                  id={comment.id}\r\n                  author={comment.author}\r\n                  email={comment.email}\r\n                  commentTitle={comment.commentTitle}\r\n                />\r\n                : null\r\n            ))\r\n          }\r\n          <hr />\r\n          <form action=\"#\" className=\"uk-comment-form uk-margin-medium-top\">\r\n            <fieldset className=\"uk-fieldset\">\r\n              <legend className=\"uk-legend\">Add Comment</legend>\r\n              <div className=\"uk-margin\">\r\n                <input\r\n                  className=\"uk-input\"\r\n                  type=\"text\"\r\n                  placeholder=\"Name\"\r\n                  required\r\n                  value={author}\r\n                  onChange={onAddAuthor}\r\n                  onKeyPress={onKeyPressDefault}\r\n                />\r\n              </div>\r\n              <div className=\"uk-margin\">\r\n                <input\r\n                  className=\"uk-input\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  required\r\n                  value={email}\r\n                  onChange={onAddEmail}\r\n                  onKeyPress={onKeyPressDefault}\r\n                />\r\n              </div>\r\n              <div className=\"uk-margin\">\r\n                <textarea\r\n                  className=\"uk-textarea\"\r\n                  rows=\"5\"\r\n                  placeholder=\"Comment\"\r\n                  required\r\n                  value={commentTitle}\r\n                  onChange={onAddComment}\r\n                ></textarea>\r\n              </div>\r\n              <div className=\"uk-margin\">\r\n                <button className=\"uk-button uk-button-primary\" type=\"submit\"\r\n                  onClick={onClickDataSend}>\r\n                  Post Comment\r\n                </button>\r\n              </div>\r\n            </fieldset>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport \"./PostscardPostsgrid.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nfunction PostscardPostsgrid({ body, title, id, toggleFavoritePosts, favoritePost }) {\r\n  const onClickFavorite = (e) => {\r\n    e.preventDefault();\r\n    toggleFavoritePosts(id);\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"uk-card uk-card-default uk-margin-medium-bottom\">\r\n        <div className=\"uk-card-header\">\r\n          <h3 className=\"uk-card-title uk-margin-remove-bottom uk-flex uk-flex-middle uk-flex-between\">\r\n            {title && `${title.slice(0, 13)}...`}\r\n            <a href=\"/\" className={favoritePost === true ? \"uk-icon-link favorite-active\" : \"uk-icon-link\"} uk-icon=\"heart\" onClick={onClickFavorite}></a>\r\n          </h3>\r\n        </div>\r\n        <div className=\"uk-card-body\">\r\n          <p>\r\n            {body.length > 120 ? `${body.slice(0, 120)} ...` : body}\r\n          </p>\r\n        </div>\r\n        <div className=\"uk-card-footer\">\r\n          <NavLink to={{ pathname: \"/Post/\" + id, postTitle: title, postBody: body }} className=\"uk-button uk-button-text\" >\r\n            Read more\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nPostscardPostsgrid.propTypes = {\r\n  id: PropTypes.number,\r\n  title: PropTypes.string,\r\n  body: PropTypes.string,\r\n  favoritePost: PropTypes.bool,\r\n  toggleFavoritePosts: PropTypes.func\r\n}\r\n\r\nexport default React.memo(PostscardPostsgrid);","import { useState, useEffect } from \"react\";\r\nimport { usePostsContext } from \"../../PostsContext\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useDebounce } from \"../Hooks/UseDebounce\";\r\nimport React from \"react\";\r\n\r\nfunction Filters() {\r\n  const { getSortPostsRequest, setQuantityPosts,\r\n    getSearchPostsRequest, setIsSearching, isSearching,\r\n    postsQuantityPage, orderValue, setOrderValue } = usePostsContext();\r\n  const [name, setName] = useState(\"\");\r\n  const [, setearchResults] = useState([]);\r\n\r\n  const debouncedValue = useDebounce(name, 500);\r\n\r\n  useEffect(() => {\r\n    if (debouncedValue) {\r\n      setIsSearching(true);\r\n      getSearchPostsRequest(debouncedValue)\r\n        .then((results) => {\r\n          setIsSearching(false);\r\n          setearchResults(results)\r\n        })\r\n    } else if (isSearching === true) {\r\n      setearchResults([]);\r\n      getSortPostsRequest(orderValue);\r\n      setIsSearching(false);\r\n    }\r\n  },\r\n    [debouncedValue]\r\n  )\r\n\r\n  const onPostsOrderChange = (e) => {\r\n    getSortPostsRequest(e.target.value);\r\n    setOrderValue(e.target.value);\r\n  }\r\n\r\n  const isActive = location.pathname;\r\n\r\n  const onKeyPressDefault = (e) => {\r\n    if (e.charCode === 13) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"uk-margin-medium-bottom uk-flex\">\r\n      <form\r\n        className=\"uk-search uk-search-default uk-width-medium uk-margin-remove uk-margin-right\">\r\n        <span uk-search-icon=\"true\"></span>\r\n        {isSearching && <span\r\n          className=\"uk-search-icon uk-search-icon-flip\"\r\n          uk-spinner=\"ratio: 0.6\"\r\n        ></span>}\r\n        <input\r\n          value={name}\r\n          onKeyPress={onKeyPressDefault}\r\n          onChange={(e) => { setIsSearching(true); setName(e.target.value); }}\r\n          className=\"uk-search-input\"\r\n          type=\"search\"\r\n          placeholder=\"Search...\"\r\n        />\r\n      </form>\r\n      <select value={orderValue}\r\n        className=\"uk-select uk-width-small uk-margin-auto-left\"\r\n        onChange={onPostsOrderChange}>\r\n        <option value=\"asc\">ASC</option>\r\n        <option value=\"desc\">DESC</option>\r\n      </select>\r\n      <select value={postsQuantityPage}\r\n        className=\"uk-select uk-width-small uk-margin-left\"\r\n        onChange={(e) => setQuantityPosts(e.target.value)}>\r\n        <option value=\"6\">6</option>\r\n        <option value=\"12\">12</option>\r\n        <option value=\"24\">24</option>\r\n      </select>\r\n      <div className=\"uk-button-group uk-margin-left\">\r\n        <NavLink to=\"/\"\r\n          activeClassName={isActive === \"/\" ? \"uk-active\" : \"\"}\r\n          className=\"uk-button uk-button-default\" >\r\n          <span uk-icon=\"icon:  grid\"></span>\r\n        </NavLink>\r\n        <NavLink to=\"/Postsgrid\"\r\n          activeClassName={isActive === \"/Postsgrid\" ? \"uk-active\" : \"\"}\r\n          className=\"uk-button uk-button-default\" >\r\n          <span uk-icon=\"icon:  list\"></span>\r\n        </NavLink>\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default React.memo(Filters);","import { useState, useEffect } from \"react\";\r\n\r\nexport const useDebounce = (value, delay) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n}","import { Pagination } from \"../../components/Pagination/Pagination\";\r\nimport { usePostsContext } from \"../../PostsContext\";\r\nimport PostscardPostsgrid from \"../../components/PostscardPostsgrid/PostscardPostsgrid\";\r\nimport Filters from \"../../components/Filters/Filters\";\r\nimport { LMButton } from \"../../components/LMButton/LMButton\";\r\nimport NavigationPosts from \"../../components/Navigation/NavigationPosts\";\r\nimport { Result } from 'antd';\r\nimport { FrownTwoTone } from '@ant-design/icons';\r\n\r\nexport function Postsgrid() {\r\n  const { currentPageCards, toggleFavoritePosts } = usePostsContext();\r\n  return (\r\n    <main className=\"uk-main\">\r\n      <NavigationPosts />\r\n      <div className=\"uk-section\">\r\n        <div className=\"uk-container\">\r\n          <Filters />\r\n          <div className=\"uk-grid uk-child-width-1-2@s uk-child-width-1-3@m\">\r\n            {currentPageCards.length > 0 ?\r\n              currentPageCards?.map((post) => (\r\n                <PostscardPostsgrid key={post.id}\r\n                  title={post.title}\r\n                  id={post.id}\r\n                  body={post.body}\r\n                  toggleFavoritePosts={toggleFavoritePosts}\r\n                  favoritePost={post.favoritePost}\r\n                />\r\n              ))\r\n              : <div className=\"uk-align-center\">\r\n                <Result\r\n                  icon={<FrownTwoTone />}\r\n                  title=\"Sorry, posts not found.\"\r\n                />\r\n              </div>\r\n            }\r\n          </div>\r\n          <LMButton />\r\n          <Pagination />\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport \"./PostscardPostsLists.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nfunction PostscardPostsLists({ body, title, id, toggleFavoritePosts, favoritePost }) {\r\n  const onClickFavorite = (e) => {\r\n    e.preventDefault();\r\n    toggleFavoritePosts(id);\r\n  }\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"uk-card uk-card-default uk-margin-medium-bottom uk-child-width-1-2@s uk-grid-collapse uk-margin\"\r\n        uk-grid=\"true\"\r\n      >\r\n        <div className=\"uk-card-media-left uk-cover-container\">\r\n          <img src=\"https://picsum.photos/600/400\" alt=\"\" uk-cover=\"true\" />\r\n          <canvas width=\"600\" height=\"400\"></canvas>\r\n        </div>\r\n        <div>\r\n          <div className=\"uk-card-body\">\r\n            <h3 className=\"uk-card-title uk-margin-remove-bottom uk-flex uk-flex-middle uk-flex-between\">\r\n              {title && `${title.slice(0, 13)}...`} <a href=\"/\" className={favoritePost === true ? \"uk-icon-link favorite-active\" : \"uk-icon-link\"} uk-icon=\"heart\" onClick={onClickFavorite}></a>\r\n            </h3>\r\n            <p>\r\n              {body.length > 120 ? `${body.slice(0, 120)} ...` : body}\r\n            </p>\r\n            <NavLink to={{ pathname: \"/Post/\" + id, postTitle: title, postBody: body }} className=\"uk-button uk-button-text\" >\r\n              Read more\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nPostscardPostsLists.propTypes = {\r\n  id: PropTypes.number,\r\n  title: PropTypes.string,\r\n  body: PropTypes.string,\r\n  favoritePost: PropTypes.bool,\r\n  toggleFavoritePosts: PropTypes.func\r\n}\r\n\r\nexport default React.memo(PostscardPostsLists);","import { usePostsContext } from \"../../PostsContext\";\r\nimport PostscardPostsLists from \"../../components/PostscardPostsLists/PostscardPostsLists\";\r\nimport { Pagination } from \"../../components/Pagination/Pagination\";\r\nimport Filters from \"../../components/Filters/Filters\";\r\nimport { LMButton } from \"../../components/LMButton/LMButton\";\r\nimport NavigationPosts from \"../../components/Navigation/NavigationPosts\";\r\nimport { Result } from 'antd';\r\nimport { FrownTwoTone } from '@ant-design/icons';\r\n\r\nexport function Postslists() {\r\n  const { currentPageCards, toggleFavoritePosts } = usePostsContext();\r\n  return (\r\n    <main className=\"uk-main\">\r\n      <NavigationPosts />\r\n      <div className=\"uk-section\">\r\n        <div className=\"uk-container\">\r\n          <Filters />\r\n          <div className=\"uk-grid uk-child-width-1-2@s uk-child-width-1-2@m\">\r\n            {currentPageCards.length > 0 ?\r\n              currentPageCards?.map((post) => {\r\n                return <PostscardPostsLists key={post.id}\r\n                  title={post.title}\r\n                  id={post.id}\r\n                  body={post.body}\r\n                  toggleFavoritePosts={toggleFavoritePosts}\r\n                  favoritePost={post.favoritePost}\r\n                />\r\n              })\r\n              : <div className=\"uk-align-center\">\r\n                <Result\r\n                  icon={<FrownTwoTone />}\r\n                  title=\"Sorry, posts not found.\"\r\n                />\r\n              </div>\r\n            }\r\n          </div>\r\n          <LMButton />\r\n          <Pagination />\r\n        </div>\r\n      </div >\r\n    </main >\r\n  )\r\n}\r\n","import { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction ScrollToTop({ history }) {\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    }\r\n  }, []);\r\n\r\n  return (null);\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","import \"uikit/dist/css/uikit.css\";\nimport Uikit from \"uikit\";\nimport Icons from \"uikit/dist/js/uikit-icons\";\nUikit.use(Icons);\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport { Albums } from \"./containers/Albums/Albums\";\nimport { Post } from \"./components/Post/Post\";\nimport { Postsgrid } from \"./containers/Postsgrid/Postsgrid\";\nimport { Postslists } from \"./containers/Postslists/PostsLists\";\nimport { PostsProvider } from \"./PostsContext\";\nimport ScrollToTop from \"./components/Hooks/ScrollToTop\"\n\nexport default function App() {\n  return (\n    <PostsProvider>\n      <BrowserRouter>\n        <ScrollToTop />\n        <Switch>\n          <Route exact path=\"/\" component={Postslists} />\n          <Route exact path=\"/Postsgrid\" component={Postsgrid} />\n          <Route exact path=\"/Albums\" component={Albums} />\n          <Route exact path=\"/Post/:id\" component={Post} />\n        </Switch>\n      </BrowserRouter>\n    </PostsProvider>\n  );\n}\n","import { StrictMode } from \"react\";\nimport 'antd/dist/antd.css';\nimport ReactDOM from \"react-dom\";\nimport Uikit from \"uikit\";\nimport Icons from \"uikit/dist/js/uikit-icons\";\nimport \"uikit/dist/css/uikit.css\";\nimport App from \"./App\";\nUikit.use(Icons);\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}