{"version":3,"sources":["utils/fetcher.js","api/index.js","PostsContext.js","components/Pagination/Pagination.js","components/AlbumsCard/AlbumsCard.js","components/LMButton/LMButton.js","components/Favorite/FavoritePosts.js","components/Favorite/FavoriteAlbums.js","components/Navigation/Navigation.js","containers/Albums/Albums.js","components/Comments/Comments.js","components/Post/Post.js","components/Filters/Filters.js","Hooks/UseDebounce.js","components/PostscardPostsLists/PostscardPostsLists.js","components/PostslistsView/PostslistsView.js","components/PostscardPostsgrid/PostscardPostsgrid.js","components/PostsgridView/PostsgridView.js","containers/Posts/Posts.js","Hooks/ScrollToTop.js","App.js","index.js"],"names":["fetcher","pathname","a","options","fetch","process","method","headers","Accept","responsse","json","getPostsRequest","getCommentsRequest","patchFavoritePostsRequest","id","favoritePost","body","JSON","stringify","patchFavoriteAlbumsRequest","favoriteAlbum","createCommentRequest","PostsContext","createContext","PostsProvider","children","useState","posts","setPosts","currentPage","setCurrentPage","postsQuantityPage","setPostsQuantityPage","orderValue","setOrderValue","isSearching","setIsSearching","errorFetch","setErrorFetch","pageListView","setPageListView","pageGridView","setPageGridView","indexOfLastPost","indexOfFirstPost","totalPosts","Math","ceil","length","currentPageCards","slice","useEffect","then","newPosts","error","value","getSortPostsRequest","favorite","getSearchPostsRequest","paginate","pageNumber","setQuantityPosts","addMorePosts","addPosts","parseInt","toggleFavoritePosts","favoritePostToggle","map","post","undefined","toggleFavoriteAlbums","favoriteAlbumsToggle","album","status","title","subTitle","Provider","usePostsContext","useContext","Pagination","pageNumbers","i","push","nextPage","previousPage","className","uk-margin","onClick","href","e","preventDefault","uk-pagination-previous","number","uk-pagination-next","AlbumsCard","src","alt","uk-cover","width","height","uk-icon","React","memo","LMButton","uk-spinner","FavoritePosts","type","FavoriteAlbums","Navigation","favoritePosts","filter","favoriteAlbums","uk-navbar","location","uk-dropdown","uk-grid","Albums","icon","FrownTwoTone","Comments","author","email","commentTitle","Post","props","comments","setComments","setAuthor","setEmail","setCommentTitle","newComments","comment","addNewComment","trim","newComment","onKeyPressDefault","charCode","postTitle","postBody","to","history","goBack","LeftCircleTwoTone","path","action","placeholder","required","onChange","target","onKeyPress","rows","Date","now","Filters","name","setName","setSearchResults","debouncedValue","delay","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","results","activeList","activeGrid","uk-search-icon","PostscardPostsLists","PostslistsView","PostscardPostsgrid","PostsgridView","Posts","withRouter","unlisten","listen","window","scrollTo","App","exact","component","Uikit","use","Icons","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.0f8e4eb4.chunk.js","sourcesContent":["const fetcher = async (pathname, options = {}) => {\r\n  if (!process.env.REACT_APP_API_URL) {\r\n    console.log(\"Забыли указать переменную окружения\");\r\n  }\r\n\r\n  try {\r\n    const responsse = await fetch(`${process.env.REACT_APP_API_URL}${pathname}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json; charset=UTF-8\"\r\n      },\r\n      ...options\r\n    });\r\n    return await responsse.json();\r\n\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n\r\n};\r\nexport default fetcher;\r\n","import fetcher from \"../utils/fetcher\";\n\nconst getPostsRequest = async () => {\n  return await fetcher(\"/posts\");\n}\n\nconst getCommentsRequest = async () => {\n  return await fetcher(\"/comments\");\n}\n\n\nconst patchFavoritePostsRequest = async (id, favoritePost) => {\n  return await fetcher(`/posts/${id}`, {\n    method: \"PATCH\",\n    body: JSON.stringify({\n      favoritePost,\n    }),\n  });\n};\n\nconst patchFavoriteAlbumsRequest = async (id, favoriteAlbum) => {\n  return await fetcher(`/posts/${id}`, {\n    method: \"PATCH\",\n    body: JSON.stringify({\n      favoriteAlbum,\n    }),\n  });\n};\n\nconst createCommentRequest = async (body) => {\n  return await fetcher(\"/comments\", {\n    method: \"POST\",\n    body: JSON.stringify(body),\n  });\n};\n\nexport { getPostsRequest, patchFavoritePostsRequest, patchFavoriteAlbumsRequest, createCommentRequest, getCommentsRequest };\n\n","import { useState, createContext, useEffect, useContext } from \"react\";\r\nimport { getPostsRequest, patchFavoritePostsRequest, patchFavoriteAlbumsRequest } from \"./api\";\r\nimport fetcher from \"./utils/fetcher\";\r\nimport { Result } from 'antd';\r\n\r\nconst PostsContext = createContext(null);\r\n\r\nconst PostsProvider = ({ children }) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsQuantityPage, setPostsQuantityPage] = useState(6);\r\n  const [orderValue, setOrderValue] = useState(\"asc\");\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [errorFetch, setErrorFetch] = useState(null);\r\n  const [pageListView, setPageListView] = useState(true);\r\n  const [pageGridView, setPageGridView] = useState(false);\r\n\r\n  const indexOfLastPost = currentPage * postsQuantityPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsQuantityPage;\r\n  const totalPosts = Math.ceil(posts.length / postsQuantityPage);\r\n\r\n  const currentPageCards = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  useEffect(() => {\r\n    getPostsRequest().then((newPosts) => setPosts(newPosts),\r\n      (error) => setErrorFetch(error));\r\n  }, []);\r\n\r\n  useEffect((value) => {\r\n    if (value !== value) {\r\n      getSortPostsRequest(value);\r\n    }\r\n  }, []);\r\n\r\n  useEffect((favorite) => {\r\n    if (favorite !== favorite) {\r\n      patchFavoritePostsRequest(id);\r\n    }\r\n  }, []);\r\n\r\n  const getSearchPostsRequest = async (value) => {\r\n    await fetcher(`/posts?title_like=${value}`)\r\n      .then((newPosts) => {\r\n        setPosts(newPosts);\r\n        setIsSearching(false);\r\n      });\r\n  }\r\n\r\n  const getSortPostsRequest = async (value) => {\r\n    return await fetcher(`/posts?_sort=id&_order=${value}`)\r\n      .then((newPosts) => setPosts(newPosts));\r\n  }\r\n\r\n  const setQuantityPosts = (value) => {\r\n    setPostsQuantityPage(value);\r\n  }\r\n\r\n  const addMorePosts = (value) => {\r\n    const addPosts = (parseInt(value) + 6);\r\n    setPostsQuantityPage(addPosts);\r\n  }\r\n\r\n  const toggleFavoritePosts = (id) => {\r\n    const favoritePostToggle = posts?.map((post) => {\r\n      if (post.id === id && post.favoritePost === undefined) {\r\n        post.favoritePost = true;\r\n        patchFavoritePostsRequest(id, post.favoritePost);\r\n      } else if (post.id === id && post.favoritePost === false) {\r\n        post.favoritePost = true;\r\n        patchFavoritePostsRequest(id, post.favoritePost);\r\n      } else if (post.id === id && post.favoritePost === true) {\r\n        post.favoritePost = false;\r\n        patchFavoritePostsRequest(id, post.favoritePost);\r\n      }\r\n      return post;\r\n    })\r\n    setPosts(favoritePostToggle);\r\n  }\r\n\r\n  const toggleFavoriteAlbums = (id) => {\r\n    const favoriteAlbumsToggle = posts?.map((album) => {\r\n      if (album.id === id && album.favoriteAlbum === undefined) {\r\n        album.favoriteAlbum = true;\r\n        patchFavoriteAlbumsRequest(id, album.favoriteAlbum);\r\n      } else if (album.id === id && album.favoriteAlbum === false) {\r\n        album.favoriteAlbum = true;\r\n        patchFavoriteAlbumsRequest(id, album.favoriteAlbum);\r\n      } else if (album.id === id && album.favoriteAlbum === true) {\r\n        album.favoriteAlbum = false;\r\n        patchFavoriteAlbumsRequest(id, album.favoriteAlbum);\r\n      }\r\n      return album;\r\n    })\r\n    setPosts(favoriteAlbumsToggle);\r\n  }\r\n\r\n  const value = {\r\n    posts,\r\n    currentPageCards,\r\n    postsQuantityPage,\r\n    totalPosts,\r\n    paginate,\r\n    currentPage,\r\n    getSortPostsRequest,\r\n    getSearchPostsRequest,\r\n    setQuantityPosts,\r\n    setPosts,\r\n    addMorePosts,\r\n    toggleFavoritePosts,\r\n    toggleFavoriteAlbums,\r\n    isSearching,\r\n    setIsSearching,\r\n    orderValue,\r\n    setOrderValue,\r\n    pageListView,\r\n    setPageListView,\r\n    pageGridView,\r\n    setPageGridView\r\n  }\r\n  if (errorFetch) {\r\n    return <Result\r\n      status=\"500\"\r\n      title=\"500\"\r\n      subTitle=\"Sorry, something went wrong.\"\r\n    />\r\n  } else {\r\n    return (\r\n      <PostsContext.Provider value={value}>\r\n        {children}\r\n      </PostsContext.Provider>\r\n    );\r\n  }\r\n};\r\n\r\nconst usePostsContext = () => useContext(PostsContext);\r\nexport { PostsContext, PostsProvider, usePostsContext };","import { usePostsContext } from \"../../PostsContext\";\r\n\r\nexport function Pagination() {\r\n  const { totalPosts, paginate, currentPage } = usePostsContext();\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= totalPosts; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  const nextPage = () => {\r\n    if ((parseInt(currentPage) + 1) <= totalPosts) {\r\n      return (parseInt(currentPage) + 1);\r\n    }\r\n    return currentPage;\r\n  }\r\n\r\n  const previousPage = () => {\r\n    if ((parseInt(currentPage) - 1) >= 1) {\r\n      return (parseInt(currentPage) - 1);\r\n    }\r\n    return currentPage;\r\n  }\r\n  return (\r\n    totalPosts > 0 && <ul\r\n      className=\"uk-pagination uk-flex-center uk-flex-middle\"\r\n      uk-margin=\"true\"\r\n    >\r\n      <li onClick={() => paginate(previousPage)}>\r\n        <a href=\"#\" onClick={(e) => e.preventDefault()}>\r\n          <span uk-pagination-previous=\"true\"></span>\r\n        </a>\r\n      </li>\r\n      {pageNumbers.map((number) => (\r\n        <li key={number} onClick={() => paginate(number)} className={(number === currentPage) ? \"uk-active\" : \"\"}>\r\n          {(number === currentPage) ? <span >{number}</span> : <a href=\"#\" onClick={(e) => e.preventDefault()}>{number}</a>}\r\n        </li>\r\n      ))\r\n      }\r\n      {/* <li className=\"uk-disabled\"><span>...</span></li> */}\r\n      <li onClick={() => paginate(nextPage)} >\r\n        <a href=\"#\" onClick={(e) => e.preventDefault()}>\r\n          <span uk-pagination-next=\"true\"></span>\r\n        </a>\r\n      </li>\r\n    </ul >\r\n  )\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport \"./AlbumsCard.css\";\r\nimport React from \"react\";\r\n\r\nfunction AlbumsCard({ title, id, toggleFavoriteAlbums, favoriteAlbum }) {\r\n  const onClickFavorite = (e) => {\r\n    e.preventDefault();\r\n    toggleFavoriteAlbums(id);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"uk-card uk-card-default uk-margin-medium-bottom uk-light\">\r\n        <img\r\n          src=\"https://picsum.photos/600/400\"\r\n          alt=\"\"\r\n          uk-cover=\"true\"\r\n        />\r\n        <canvas width=\"600\" height=\"400\"></canvas>\r\n        <div className=\"uk-overlay-primary uk-position-cover\"></div>\r\n        <div className=\"uk-overlay uk-overlay-primary uk-position-bottom\">\r\n          <p>\r\n            {title}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"uk-position-top-right uk-overlay\">\r\n          <a href=\"\" uk-icon=\"icon: heart; ratio: 2\" onClick={onClickFavorite} className={favoriteAlbum === true ? \"uk-icon favorite-active\" : \"uk-icon\"}></a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nAlbumsCard.propTypes = {\r\n  id: PropTypes.number,\r\n  title: PropTypes.string,\r\n  favoriteAlbum: PropTypes.bool,\r\n  toggleFavoriteAlbums: PropTypes.func\r\n}\r\n\r\nexport default React.memo(AlbumsCard);","import { usePostsContext } from \"../../PostsContext\";\r\n\r\nexport function LMButton() {\r\n  const { addMorePosts, postsQuantityPage, posts } = usePostsContext();\r\n  return (\r\n    <div className=\"uk-margin\">\r\n      <button className=\"uk-button uk-button-primary uk-width-1-1 uk-margin-small-bottom\" onClick={() => addMorePosts(postsQuantityPage)}>\r\n        Load more{\" \"}\r\n        {posts < 1 && <div\r\n          className=\"uk-margin-small-left\"\r\n          uk-spinner=\"ratio: 0.6\"\r\n        >\r\n        </div>}\r\n      </button>\r\n    </div>\r\n  )\r\n}","import PropTypes from \"prop-types\";\r\nimport \"./Favorite.css\";\r\n\r\nfunction FavoritePosts({ title, id, toggleFavoritePosts }) {\r\n  return (\r\n    <tbody>\r\n      <tr>\r\n        <th>Post</th>\r\n        <td>{title}</td>\r\n        <td className=\"uk-text-right\">\r\n          <button\r\n            className=\"uk-button\"\r\n            type=\"button\"\r\n            uk-icon=\"icon: close;\"\r\n            onClick={() => toggleFavoritePosts(id)}\r\n          ></button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  )\r\n}\r\n\r\nFavoritePosts.propTypes = {\r\n  id: PropTypes.number,\r\n  title: PropTypes.string,\r\n  toggleFavoritePosts: PropTypes.func\r\n}\r\n\r\nexport default FavoritePosts;","import PropTypes from \"prop-types\";\r\nimport \"./Favorite.css\";\r\n\r\nfunction FavoriteAlbums({ title, id, toggleFavoriteAlbums }) {\r\n  return (\r\n    <tbody>\r\n      <tr>\r\n        <th>Album</th>\r\n        <td>{title}</td>\r\n        <td className=\"uk-text-right\">\r\n          <button\r\n            className=\"uk-button\"\r\n            type=\"button\"\r\n            uk-icon=\"icon: close;\"\r\n            onClick={() => toggleFavoriteAlbums(id)}\r\n          ></button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  )\r\n}\r\n\r\nFavoriteAlbums.propTypes = {\r\n  id: PropTypes.number,\r\n  title: PropTypes.string,\r\n  toggleFavoriteAlbums: PropTypes.func\r\n}\r\n\r\nexport default FavoriteAlbums;","import FavoritePosts from \"../Favorite/FavoritePosts\";\r\nimport FavoriteAlbums from \"../Favorite/FavoriteAlbums\";\r\nimport { usePostsContext } from \"../../PostsContext\";\r\nimport React from \"react\";\r\n\r\nfunction Navigation() {\r\n  const { posts, toggleFavoritePosts, toggleFavoriteAlbums } = usePostsContext();\r\n  const favoritePosts = posts.filter((post) => {\r\n    if (post.favoritePost === true) {\r\n      return post.favoritePost;\r\n    }\r\n  })\r\n\r\n  const favoriteAlbums = posts.filter((album) => {\r\n    if (album.favoriteAlbum === true) {\r\n      return album.favoriteAlbum;\r\n    }\r\n  })\r\n\r\n  return (\r\n    <nav className=\"uk-navbar uk-navbar-container\" uk-navbar=\"true\">\r\n      <div className=\"uk-navbar-left\">\r\n        <ul className=\"uk-navbar-nav\">\r\n          <li className={location.pathname === \"/\"\r\n            || location.pathname === \"/Postsgrid\"\r\n            ? \"uk-active\" : \"\"}>\r\n            <a href=\"/\">Posts</a>\r\n          </li>\r\n          <li className={location.pathname === \"/Albums\"\r\n            ? \"uk-active\" : \"\"}>\r\n            <a href=\"/Albums\">Albums</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"uk-navbar-right\">\r\n        <div className=\"uk-navbar-item\">\r\n          <button\r\n            className={favoritePosts.length || favoriteAlbums.length\r\n              ? \"uk-button favorite-active\" : \"uk-button\"}\r\n            type=\"button\"\r\n            uk-icon=\"icon: heart; ratio: 2\"\r\n          ></button>\r\n          <div className=\"uk-width-large\" uk-dropdown=\"mode: click\">\r\n            <div\r\n              className=\"uk-dropdown-grid uk-child-width-1-1@m\"\r\n              uk-grid=\"true\"\r\n            >\r\n              <div>\r\n                <table className=\"uk-table uk-table-divider uk-table-justify\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Favorite</th>\r\n                      <th>Title</th>\r\n                      <th className=\"uk-text-right\">Delete</th>\r\n                    </tr>\r\n                  </thead>\r\n                  {favoritePosts?.map((post) => (\r\n                    <FavoritePosts\r\n                      key={post.id}\r\n                      title={post.title}\r\n                      id={post.id}\r\n                      toggleFavoritePosts={toggleFavoritePosts}\r\n                    />\r\n                  ))}\r\n                  {favoriteAlbums?.map((album) => (\r\n                    <FavoriteAlbums\r\n                      key={album.id}\r\n                      title={album.title}\r\n                      id={album.id}\r\n                      toggleFavoriteAlbums={toggleFavoriteAlbums}\r\n                    />\r\n                  ))\r\n                  }\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default React.memo(Navigation);","import { Pagination } from \"../../components/Pagination/Pagination\";\r\nimport { usePostsContext } from \"../../PostsContext\";\r\nimport AlbumsCard from \"../../components/AlbumsCard/AlbumsCard\";\r\nimport { LMButton } from \"../../components/LMButton/LMButton\";\r\nimport Navigation from \"../../components/Navigation/Navigation\";\r\nimport { Result } from 'antd';\r\nimport { FrownTwoTone } from '@ant-design/icons';\r\n\r\nexport function Albums() {\r\n  const { currentPageCards, toggleFavoriteAlbums } = usePostsContext();\r\n  return (\r\n    <main className=\"uk-main\">\r\n      <Navigation />\r\n      <div className=\"uk-section\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid uk-child-width-1-2@s uk-child-width-1-3@m\">\r\n            {currentPageCards.length > 0 ?\r\n              currentPageCards?.map((album) => (\r\n                <AlbumsCard key={album.id}\r\n                  id={album.id}\r\n                  title={album.title}\r\n                  toggleFavoriteAlbums={toggleFavoriteAlbums}\r\n                  favoriteAlbum={album.favoriteAlbum}\r\n                />\r\n              ))\r\n              : <div className=\"uk-align-center\">\r\n                <Result\r\n                  icon={<FrownTwoTone />}\r\n                  title=\"Sorry, albums not found.\"\r\n                />\r\n              </div>}\r\n          </div>\r\n          <LMButton />\r\n          <Pagination />\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction Comments({ author, email, commentTitle }) {\r\n  return (\r\n    <div className=\"uk-comments\">\r\n      <article className=\"uk-comment\">\r\n        <header className=\"uk-comment-header uk-grid uk-grid-medium uk-flex-middle\">\r\n          <div className=\"uk-width-expand\">\r\n            <h4 className=\"uk-comment-title uk-margin-remove\">\r\n              <a className=\"uk-link-reset\"\r\n                href=\"#\"\r\n                onClick={(e) => e.preventDefault()}>\r\n                Author: {author}\r\n              </a>\r\n            </h4>\r\n            <ul className=\"uk-comment-meta uk-subnav uk-subnav-divider uk-margin-remove-top\">\r\n              <li>\r\n                <a href=\"#\"\r\n                  onClick={(e) => e.preventDefault()}>\r\n                  Email: {email}</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </header>\r\n        <div className=\"uk-comment-body\">\r\n          <p>\r\n            {commentTitle}\r\n          </p>\r\n        </div>\r\n      </article>\r\n    </div>\r\n  )\r\n}\r\n\r\nComments.propTypes = {\r\n  author: PropTypes.string,\r\n  email: PropTypes.string,\r\n  commentTitle: PropTypes.string,\r\n}\r\n\r\nexport default Comments;","import \"./Post.css\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Comments from \"../Comments/Comments\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { createCommentRequest, getCommentsRequest } from \"../../api\";\r\nimport { LeftCircleTwoTone } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\n\r\n\r\nexport function Post(props) {\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [commentTitle, setCommentTitle] = useState(\"\");\r\n\r\n  const onAddAuthor = (e) => (setAuthor(e.target.value));\r\n\r\n  const onAddEmail = (e) => (setEmail(e.target.value));\r\n\r\n  const onAddComment = (e) => (setCommentTitle(e.target.value));\r\n\r\n  const onClickDataSend = (e) => {\r\n    addNewComment({\r\n      path: location.pathname,\r\n      id: Date.now(),\r\n      author: author,\r\n      email: email,\r\n      commentTitle: commentTitle\r\n    })\r\n    setAuthor(\"\");\r\n    setEmail(\"\");\r\n    setCommentTitle(\"\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCommentsRequest().then((newComments) => setComments(newComments));\r\n  }, []);\r\n\r\n  useEffect((comment) => {\r\n    if (comments.comment !== comments.comment) {\r\n      createCommentRequest(comment);\r\n    }\r\n    return () => {\r\n      setComments([])\r\n    }\r\n  }, []);\r\n\r\n  const addNewComment = async (comment) => {\r\n    if (comment.commentTitle.trim() && comment.email.trim() && comment.author.trim()) {\r\n      const newComment = await createCommentRequest(comment);\r\n      setComments([...comments, newComment]);\r\n    }\r\n  }\r\n\r\n  const onKeyPressDefault = (e) => {\r\n    if (e.charCode === 13) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  return (\r\n    props.location.postTitle === undefined\r\n      || props.location.postBody === undefined\r\n      ? <Redirect to=\"/\" /> :\r\n      <main className=\"uk-main\">\r\n        <Navigation />\r\n        <div className=\"two-tone\">\r\n          <Button type=\"primary\"\r\n            onClick={() => props.history.goBack()}>\r\n            <LeftCircleTwoTone className=\"antd-back-icon\" />\r\n          BACK...\r\n        </Button>\r\n        </div>\r\n        <div className=\"uk-section\">\r\n          <div className=\"uk-container\">\r\n            <h1 className=\"uk-heading-bullet uk-margin-medium-bottom\">\r\n              <span>{props.location.postTitle}\r\n              </span>\r\n              <a className=\"uk-text-small\" href=\"#\"> Author\r\n            </a>\r\n            </h1>\r\n            <div className=\"uk-article uk-dropcap uk-margin-large-bottom\">\r\n              <p>\r\n                {props.location.postBody}.\r\n            </p>\r\n            </div>\r\n            <hr />\r\n            <h3 className=\"uk-margin-remove-top\">Comments:</h3>\r\n            {\r\n              comments?.map((comment) => (\r\n                comment.path === props.location.pathname ?\r\n                  <Comments\r\n                    key={comment.id}\r\n                    id={comment.id}\r\n                    author={comment.author}\r\n                    email={comment.email}\r\n                    commentTitle={comment.commentTitle}\r\n                  />\r\n                  : null\r\n              ))\r\n            }\r\n            <hr />\r\n            <form action=\"#\" className=\"uk-comment-form uk-margin-medium-top\">\r\n              <fieldset className=\"uk-fieldset\">\r\n                <legend className=\"uk-legend\">Add Comment</legend>\r\n                <div className=\"uk-margin\">\r\n                  <input\r\n                    className=\"uk-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    required\r\n                    value={author}\r\n                    onChange={onAddAuthor}\r\n                    onKeyPress={onKeyPressDefault}\r\n                  />\r\n                </div>\r\n                <div className=\"uk-margin\">\r\n                  <input\r\n                    className=\"uk-input\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onAddEmail}\r\n                    onKeyPress={onKeyPressDefault}\r\n                  />\r\n                </div>\r\n                <div className=\"uk-margin\">\r\n                  <textarea\r\n                    className=\"uk-textarea\"\r\n                    rows=\"5\"\r\n                    placeholder=\"Comment\"\r\n                    required\r\n                    value={commentTitle}\r\n                    onChange={onAddComment}\r\n                  ></textarea>\r\n                </div>\r\n                <div className=\"uk-margin\">\r\n                  <button className=\"uk-button uk-button-primary\" type=\"submit\"\r\n                    onClick={onClickDataSend}>\r\n                    Post Comment\r\n                </button>\r\n                </div>\r\n              </fieldset>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </main>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { usePostsContext } from \"../../PostsContext\";\r\nimport { useDebounce } from \"../../Hooks/UseDebounce\";\r\nimport React from \"react\";\r\n\r\nfunction Filters() {\r\n  const { getSortPostsRequest, setQuantityPosts,\r\n    getSearchPostsRequest, setIsSearching, isSearching,\r\n    postsQuantityPage, orderValue, setOrderValue, pageListView,\r\n    setPageListView, pageGridView, setPageGridView } = usePostsContext();\r\n  const [name, setName] = useState(\"\");\r\n  const [, setSearchResults] = useState([]);\r\n  const debouncedValue = useDebounce(name, 500);\r\n\r\n  useEffect(() => {\r\n    if (debouncedValue) {\r\n      setIsSearching(true);\r\n      getSearchPostsRequest(debouncedValue)\r\n        .then((results) => {\r\n          setIsSearching(false);\r\n          setSearchResults(results)\r\n        })\r\n    } else if (isSearching === true) {\r\n      setSearchResults([]);\r\n      getSortPostsRequest(orderValue);\r\n      setIsSearching(false);\r\n    }\r\n  },\r\n    [debouncedValue]\r\n  )\r\n\r\n  const onPostsOrderChange = (e) => {\r\n    getSortPostsRequest(e.target.value);\r\n    setOrderValue(e.target.value);\r\n  }\r\n\r\n  const activeList = pageListView ? \"uk-active\" : \"\";\r\n  const activeGrid = pageGridView ? \"uk-active\" : \"\";\r\n\r\n  const onKeyPressDefault = (e) => {\r\n    if (e.charCode === 13) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"uk-margin-medium-bottom uk-flex\">\r\n      <form\r\n        className=\"uk-search uk-search-default uk-width-medium uk-margin-remove uk-margin-right\">\r\n        <span uk-search-icon=\"true\"></span>\r\n        {isSearching && <span\r\n          className=\"uk-search-icon uk-search-icon-flip\"\r\n          uk-spinner=\"ratio: 0.6\"\r\n        ></span>}\r\n        <input\r\n          value={name}\r\n          onKeyPress={onKeyPressDefault}\r\n          onChange={(e) => { setIsSearching(true); setName(e.target.value); }}\r\n          className=\"uk-search-input\"\r\n          type=\"search\"\r\n          placeholder=\"Search...\"\r\n        />\r\n      </form>\r\n      <select value={orderValue}\r\n        className=\"uk-select uk-width-small uk-margin-auto-left\"\r\n        onChange={onPostsOrderChange}>\r\n        <option value=\"asc\">ASC</option>\r\n        <option value=\"desc\">DESC</option>\r\n      </select>\r\n      <select value={postsQuantityPage}\r\n        className=\"uk-select uk-width-small uk-margin-left\"\r\n        onChange={(e) => setQuantityPosts(e.target.value)}>\r\n        <option value=\"6\">6</option>\r\n        <option value=\"12\">12</option>\r\n        <option value=\"24\">24</option>\r\n      </select>\r\n      <div className=\"uk-button-group uk-margin-left\">\r\n        <button\r\n          className={`uk-button uk-button-default ${activeList}`}\r\n          onClick={() => { setPageGridView(false); setPageListView(true) }}>\r\n          <span uk-icon=\"icon:  grid\"></span>\r\n        </button>\r\n        <button\r\n          className={`uk-button uk-button-default ${activeGrid}`}\r\n          onClick={() => { setPageGridView(true); setPageListView(false) }}>\r\n          <span uk-icon=\"icon:  list\"></span>\r\n        </button>\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default React.memo(Filters);","import { useState, useEffect } from \"react\";\r\n\r\nexport const useDebounce = (value, delay) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n}","import PropTypes from \"prop-types\";\r\nimport \"./PostscardPostsLists.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nfunction PostscardPostsLists({ body, title, id, toggleFavoritePosts, favoritePost }) {\r\n  const onClickFavorite = (e) => {\r\n    e.preventDefault();\r\n    toggleFavoritePosts(id);\r\n  }\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"uk-card uk-card-default uk-margin-medium-bottom uk-child-width-1-2@s uk-grid-collapse uk-margin\"\r\n        uk-grid=\"true\"\r\n      >\r\n        <div className=\"uk-card-media-left uk-cover-container\">\r\n          <img src=\"https://picsum.photos/600/400\" alt=\"\" uk-cover=\"true\" />\r\n          <canvas width=\"600\" height=\"400\"></canvas>\r\n        </div>\r\n        <div>\r\n          <div className=\"uk-card-body\">\r\n            <h3 className=\"uk-card-title uk-margin-remove-bottom uk-flex uk-flex-middle uk-flex-between\">\r\n              {title && `${title.slice(0, 13)}...`} <a href=\"/\" className={favoritePost === true ? \"uk-icon-link favorite-active\" : \"uk-icon-link\"} uk-icon=\"heart\" onClick={onClickFavorite}></a>\r\n            </h3>\r\n            <p>\r\n              {body.length > 120 ? `${body.slice(0, 120)} ...` : body}\r\n            </p>\r\n            <NavLink to={{ pathname: \"/Post/\" + id, postTitle: title, postBody: body }} className=\"uk-button uk-button-text\" >\r\n              Read more\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nPostscardPostsLists.propTypes = {\r\n  id: PropTypes.number,\r\n  title: PropTypes.string,\r\n  body: PropTypes.string,\r\n  favoritePost: PropTypes.bool,\r\n  toggleFavoritePosts: PropTypes.func\r\n}\r\n\r\nexport default React.memo(PostscardPostsLists);","import { usePostsContext } from \"../../PostsContext\";\r\nimport PostscardPostsLists from \"../../components/PostscardPostsLists/PostscardPostsLists\";\r\nimport { Result } from 'antd';\r\nimport { FrownTwoTone } from '@ant-design/icons';\r\n\r\nexport function PostslistsView() {\r\n  const { currentPageCards, toggleFavoritePosts } = usePostsContext();\r\n  return (\r\n    <div className=\"uk-grid uk-child-width-1-2@s uk-child-width-1-2@m\">\r\n      {currentPageCards.length > 0 ?\r\n        currentPageCards?.map((post) => {\r\n          return <PostscardPostsLists key={post.id}\r\n            title={post.title}\r\n            id={post.id}\r\n            body={post.body}\r\n            toggleFavoritePosts={toggleFavoritePosts}\r\n            favoritePost={post.favoritePost}\r\n          />\r\n        })\r\n        : <div className=\"uk-align-center\">\r\n          <Result\r\n            icon={<FrownTwoTone />}\r\n            title=\"Sorry, posts not found.\"\r\n          />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}","import PropTypes from \"prop-types\";\r\nimport \"./PostscardPostsgrid.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nfunction PostscardPostsgrid({ body, title, id, toggleFavoritePosts, favoritePost }) {\r\n  const onClickFavorite = (e) => {\r\n    e.preventDefault();\r\n    toggleFavoritePosts(id);\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"uk-card uk-card-default uk-margin-medium-bottom\">\r\n        <div className=\"uk-card-header\">\r\n          <h3 className=\"uk-card-title uk-margin-remove-bottom uk-flex uk-flex-middle uk-flex-between\">\r\n            {title && `${title.slice(0, 13)}...`}\r\n            <a href=\"/\" className={favoritePost === true ? \"uk-icon-link favorite-active\" : \"uk-icon-link\"} uk-icon=\"heart\" onClick={onClickFavorite}></a>\r\n          </h3>\r\n        </div>\r\n        <div className=\"uk-card-body\">\r\n          <p>\r\n            {body.length > 120 ? `${body.slice(0, 120)} ...` : body}\r\n          </p>\r\n        </div>\r\n        <div className=\"uk-card-footer\">\r\n          <NavLink to={{ pathname: \"/Post/\" + id, postTitle: title, postBody: body }} className=\"uk-button uk-button-text\" >\r\n            Read more\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nPostscardPostsgrid.propTypes = {\r\n  id: PropTypes.number,\r\n  title: PropTypes.string,\r\n  body: PropTypes.string,\r\n  favoritePost: PropTypes.bool,\r\n  toggleFavoritePosts: PropTypes.func\r\n}\r\n\r\nexport default React.memo(PostscardPostsgrid);","import { usePostsContext } from \"../../PostsContext\";\r\nimport PostscardPostsgrid from \"../../components/PostscardPostsgrid/PostscardPostsgrid\";\r\nimport { Result } from 'antd';\r\nimport { FrownTwoTone } from '@ant-design/icons';\r\n\r\nexport function PostsgridView() {\r\n  const { currentPageCards, toggleFavoritePosts } = usePostsContext();\r\n  return (\r\n    <div className=\"uk-grid uk-child-width-1-2@s uk-child-width-1-3@m\">\r\n      {currentPageCards.length > 0 ?\r\n        currentPageCards?.map((post) => (\r\n          <PostscardPostsgrid key={post.id}\r\n            title={post.title}\r\n            id={post.id}\r\n            body={post.body}\r\n            toggleFavoritePosts={toggleFavoritePosts}\r\n            favoritePost={post.favoritePost}\r\n          />\r\n        ))\r\n        : <div className=\"uk-align-center\">\r\n          <Result\r\n            icon={<FrownTwoTone />}\r\n            title=\"Sorry, posts not found.\"\r\n          />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}","import { Pagination } from \"../../components/Pagination/Pagination\";\r\nimport Filters from \"../../components/Filters/Filters\";\r\nimport { LMButton } from \"../../components/LMButton/LMButton\";\r\nimport Navigation from \"../../components/Navigation/Navigation\";\r\nimport { PostslistsView } from \"../../components/PostslistsView/PostslistsView\";\r\nimport { PostsgridView } from \"../../components/PostsgridView/PostsgridView\";\r\nimport { usePostsContext } from \"../../PostsContext\";\r\n\r\nexport function Posts() {\r\n  const { pageListView } = usePostsContext();\r\n  return (\r\n    <main className=\"uk-main\">\r\n      <Navigation />\r\n      <div className=\"uk-section\">\r\n        <div className=\"uk-container\">\r\n          <Filters />\r\n          {pageListView ?\r\n            <PostslistsView /> :\r\n            <PostsgridView />}\r\n          <LMButton />\r\n          <Pagination />\r\n        </div>\r\n      </div >\r\n    </main >\r\n  )\r\n}\r\n","import { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction ScrollToTop({ history }) {\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    }\r\n  }, []);\r\n\r\n  return (null);\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { Albums } from \"./containers/Albums/Albums\";\nimport { Post } from \"./components/Post/Post\";\nimport { Posts } from \"./containers/Posts/Posts\";\nimport ScrollToTop from \"./Hooks/ScrollToTop\"\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <ScrollToTop />\n      <Switch>\n        <Route exact path=\"/\" component={Posts} />\n        <Route exact path=\"/Albums\" component={Albums} />\n        <Route exact path=\"/Post/:id\" component={Post} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { PostsProvider } from \"./PostsContext\";\nimport 'antd/dist/antd.css';\nimport ReactDOM from \"react-dom\";\nimport Uikit from \"uikit\";\nimport Icons from \"uikit/dist/js/uikit-icons\";\nimport \"uikit/dist/css/uikit.css\";\nimport App from \"./App\";\nUikit.use(Icons);\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <PostsProvider>\n      <App />\n    </PostsProvider>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}