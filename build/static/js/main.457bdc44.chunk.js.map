{"version":3,"sources":["utils/fetcher.js","api/index.js","PostsContext.js","components/Pagination/Pagination.js","components/Albums/AlbumsCard/AlbumsCard.js","components/LMButton/LMButton.js","components/Navigation/Favorite/Favorite.js","components/Navigation/Navigation.js","components/Albums/Albums.js","components/Post/Comments/Comments.js","components/Post/Post.js","components/Posts/PostscardPosts/PostscardPosts.js","components/Filters/Filters.js","components/Posts/Posts.js","components/Postsgrid/PostscardPostsgrid/PostscardPostsgrid.js","components/Postsgrid/Postsgrid.js","components/Postslists/PostscardPostsLists/PostscardPostsLists.js","components/Postslists/PostsLists.js","App.js","index.js"],"names":["fetcher","pathname","a","options","fetch","process","method","headers","Accept","responsse","json","getPostsRequest","getCommentsRequest","patchFavoritePostsRequest","id","favorite","body","JSON","stringify","createCommentRequest","PostsContext","createContext","PostsProvider","children","useState","posts","setPosts","currentPage","setCurrentPage","postsQuantityPage","setPostsQuantityPage","indexOfLastPost","indexOfFirstPost","totalPosts","Math","ceil","length","currentPosts","slice","useEffect","then","newPosts","value","getSearchPostsRequest","getSortPostsRequest","paginate","pageNumber","setQuantityPosts","addMorePosts","addPosts","parseInt","toggleFavorite","favoritePost","map","post","undefined","Provider","usePostsContext","useContext","Pagination","pageNumbers","i","push","nextPage","previousPage","className","uk-margin","onClick","href","e","preventDefault","uk-pagination-previous","number","uk-pagination-next","AlbumsCard","src","alt","uk-cover","width","height","uk-icon","LMButton","uk-spinner","Favorite","title","type","Navigation","favoritePosts","filter","uk-navbar","location","uk-dropdown","uk-grid","Albums","Comments","author","email","commentTitle","Post","props","comments","setComments","setAuthor","setEmail","setCommentTitle","newComments","comment","addNewComment","trim","newComment","onKeyPressDefault","charCode","postTitle","to","postBody","action","placeholder","required","onChange","target","onKeyPress","rows","Date","now","PostscardPosts","Filters","name","setName","orderValue","setOrderValue","isActive","uk-search-icon","activeClassName","Posts","PostscardPostsgrid","Postsgrid","PostscardPostsLists","Postslists","App","exact","path","component","Uikit","use","Icons","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.457bdc44.chunk.js","sourcesContent":["const fetcher = async (pathname, options = {}) => {\r\n  if (!process.env.REACT_APP_API_URL) {\r\n    console.log(\"Забыли указать переменную окружения\");\r\n  }\r\n\r\n  try {\r\n    const responsse = await fetch(`${process.env.REACT_APP_API_URL}${pathname}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json; charset=UTF-8\"\r\n      },\r\n      ...options\r\n    });\r\n    return await responsse.json();\r\n\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n\r\n};\r\nexport default fetcher;\r\n","import fetcher from \"../utils/fetcher\"\n\nconst getPostsRequest = async () => {\n  return await fetcher(\"/posts\");\n}\n\nconst getCommentsRequest = async () => {\n  return await fetcher(\"/comments\");\n}\n\n\nconst patchFavoritePostsRequest = async (id, favorite) => {\n  return await fetcher(`/posts/${id}`, {\n    method: \"PATCH\",\n    body: JSON.stringify({\n      favorite,\n    }),\n  });\n};\n\nconst createCommentRequest = async (body) => {\n  return await fetcher(\"/comments\", {\n    method: \"POST\",\n    body: JSON.stringify(body),\n  });\n};\n\nexport { getPostsRequest, patchFavoritePostsRequest, createCommentRequest, getCommentsRequest };\n\n","import { useState, createContext, useEffect, useContext } from \"react\";\r\nimport { getPostsRequest, patchFavoritePostsRequest } from \"./api\";\r\nimport fetcher from \"./utils/fetcher\";\r\n\r\nconst PostsContext = createContext(null);\r\n\r\nconst PostsProvider = ({ children }) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsQuantityPage, setPostsQuantityPage] = useState(6);\r\n\r\n  const indexOfLastPost = currentPage * postsQuantityPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsQuantityPage;\r\n  const totalPosts = Math.ceil(posts.length / postsQuantityPage);\r\n\r\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  useEffect(() => {\r\n    getPostsRequest().then((newPosts) => setPosts(newPosts));\r\n  }, []);\r\n\r\n  useEffect((value) => {\r\n    if (value !== value) {\r\n      getSearchPostsRequest(value);\r\n    }\r\n  }, []);\r\n\r\n  useEffect((value) => {\r\n    if (value !== value) {\r\n      getSortPostsRequest(value);\r\n    }\r\n  }, []);\r\n\r\n  useEffect((favorite) => {\r\n    if (favorite !== favorite) {\r\n      patchFavoritePostsRequest(id);\r\n    }\r\n  }, []);\r\n\r\n  const getSearchPostsRequest = async (value) => {\r\n    return await fetcher(`/posts?title_like=${value}`)\r\n      .then((newPosts) => setPosts(newPosts));\r\n  }\r\n\r\n  const getSortPostsRequest = async (value) => {\r\n    return await fetcher(`/posts?_sort=id&_order=${value}`)\r\n      .then((newPosts) => setPosts(newPosts));\r\n  }\r\n\r\n  const setQuantityPosts = (value) => {\r\n    setPostsQuantityPage(value);\r\n  }\r\n\r\n  const addMorePosts = (value) => {\r\n    const addPosts = (parseInt(value) + 6);\r\n    setPostsQuantityPage(addPosts);\r\n  }\r\n\r\n  const toggleFavorite = (id) => {\r\n    const favoritePost = posts?.map((post) => {\r\n      if (post.id === id && post.favorite === undefined) {\r\n        post.favorite = true;\r\n        patchFavoritePostsRequest(id, post.favorite)\r\n      } else if (post.id === id && post.favorite === false) {\r\n        post.favorite = true;\r\n        patchFavoritePostsRequest(id, post.favorite)\r\n      } else if (post.id === id && post.favorite === true) {\r\n        post.favorite = false;\r\n        patchFavoritePostsRequest(id, post.favorite)\r\n      }\r\n      return post;\r\n    })\r\n    setPosts(favoritePost);\r\n  }\r\n\r\n  const value = {\r\n    posts,\r\n    currentPosts,\r\n    postsQuantityPage,\r\n    totalPosts,\r\n    paginate,\r\n    currentPage,\r\n    getSortPostsRequest,\r\n    getSearchPostsRequest,\r\n    setQuantityPosts,\r\n    setPosts,\r\n    addMorePosts,\r\n    toggleFavorite\r\n  }\r\n\r\n  return (\r\n    <PostsContext.Provider value={value}>\r\n      {children}\r\n    </PostsContext.Provider>\r\n  );\r\n\r\n};\r\n\r\nconst usePostsContext = () => useContext(PostsContext);\r\nexport { PostsContext, PostsProvider, usePostsContext };","import { usePostsContext } from \"../../PostsContext\";\r\n\r\nexport function Pagination() {\r\n  const { totalPosts, paginate, currentPage } = usePostsContext();\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= totalPosts; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  const nextPage = () => {\r\n    if ((parseInt(currentPage) + 1) <= totalPosts) {\r\n      return (parseInt(currentPage) + 1);\r\n    }\r\n    return currentPage;\r\n  }\r\n\r\n  const previousPage = () => {\r\n    if ((parseInt(currentPage) - 1) >= 1) {\r\n      return (parseInt(currentPage) - 1);\r\n    }\r\n    return currentPage;\r\n  }\r\n  return (\r\n    <ul\r\n      className=\"uk-pagination uk-flex-center uk-flex-middle\"\r\n      uk-margin=\"true\"\r\n    >\r\n      <li onClick={() => paginate(previousPage)}>\r\n        <a href=\"#\" onClick={(e) => e.preventDefault()}>\r\n          <span uk-pagination-previous=\"true\"></span>\r\n        </a>\r\n      </li>\r\n      {pageNumbers.map((number) => (\r\n        <li key={number} onClick={() => paginate(number)} className={(number === currentPage) ? \"uk-active\" : \"\"}>\r\n          {(number === currentPage) ? <span >{number}</span> : <a href=\"#\" onClick={(e) => e.preventDefault()}>{number}</a>}\r\n        </li>\r\n      ))\r\n      }\r\n      {/* <li className=\"uk-disabled\"><span>...</span></li> */}\r\n      <li onClick={() => paginate(nextPage)} >\r\n        <a href=\"#\" onClick={(e) => e.preventDefault()}>\r\n          <span uk-pagination-next=\"true\"></span>\r\n        </a>\r\n      </li>\r\n    </ul >\r\n  )\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport \"./AlbumsCard.css\";\r\n\r\nfunction AlbumsCard({ body, id, toggleFavorite, favorite }) {\r\n  const onClickFavorite = (e) => {\r\n    e.preventDefault();\r\n    toggleFavorite(id);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"uk-card uk-card-default uk-margin-medium-bottom uk-light\">\r\n        <img\r\n          src=\"https://picsum.photos/600/400\"\r\n          alt=\"\"\r\n          uk-cover=\"true\"\r\n        />\r\n        <canvas width=\"600\" height=\"400\"></canvas>\r\n        <div className=\"uk-overlay-primary uk-position-cover\"></div>\r\n        <div className=\"uk-overlay uk-overlay-primary uk-position-bottom\">\r\n          <p>\r\n            {body}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"uk-position-top-right uk-overlay\">\r\n          <a href=\"\" uk-icon=\"icon: heart; ratio: 2\" onClick={onClickFavorite} className={favorite === true ? \"uk-icon favorite-active\" : \"uk-icon\"}></a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nAlbumsCard.propTypes = {\r\n  id: PropTypes.number,\r\n  body: PropTypes.string,\r\n  favorite: PropTypes.bool,\r\n  toggleFavorite: PropTypes.func\r\n}\r\n\r\nexport default AlbumsCard;","import { usePostsContext } from \"../../PostsContext\";\r\n\r\nexport function LMButton() {\r\n  const { addMorePosts, postsQuantityPage, posts } = usePostsContext();\r\n  return (\r\n    <div className=\"uk-margin\">\r\n      <button className=\"uk-button uk-button-primary uk-width-1-1 uk-margin-small-bottom\" onClick={() => addMorePosts(postsQuantityPage)}>\r\n        Load more{\" \"}\r\n        {posts < 1 && <div\r\n          className=\"uk-margin-small-left\"\r\n          uk-spinner=\"ratio: 0.6\"\r\n        >\r\n        </div>}\r\n      </button>\r\n    </div>\r\n  )\r\n}","import PropTypes from \"prop-types\";\r\nimport \"./Favorite.css\";\r\n\r\nfunction Favorite({ title, id, toggleFavorite }) {\r\n  return (\r\n    <tbody>\r\n      <tr>\r\n        <td>{title}</td>\r\n        <td className=\"uk-text-right\">\r\n          <button\r\n            className=\"uk-button\"\r\n            type=\"button\"\r\n            uk-icon=\"icon: close;\"\r\n            onClick={() => toggleFavorite(id)}\r\n          ></button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  )\r\n}\r\n\r\nFavorite.propTypes = {\r\n  id: PropTypes.number,\r\n  title: PropTypes.string,\r\n  toggleFavorite: PropTypes.func\r\n}\r\n\r\nexport default Favorite;","import Favorite from \"./Favorite/Favorite\";\r\nimport { usePostsContext } from \"../../PostsContext\";\r\n\r\nexport function Navigation() {\r\n  const { posts, toggleFavorite } = usePostsContext();\r\n  const favoritePosts = posts.filter((post) => {\r\n    if (post.favorite === true) {\r\n      return post.favorite;\r\n    }\r\n  })\r\n\r\n  return (\r\n    <nav className=\"uk-navbar uk-navbar-container\" uk-navbar=\"true\">\r\n      <div className=\"uk-navbar-left\">\r\n        <ul className=\"uk-navbar-nav\">\r\n          <li className={location.pathname === \"/Postsgrid\" ? \"uk-active\" : \"\"}>\r\n            <a href=\"Postsgrid\">Posts</a>\r\n          </li>\r\n          <li className={location.pathname === \"/Albums\" ? \"uk-active\" : \"\"}>\r\n            <a href=\"Albums\">Albums</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"uk-navbar-right\">\r\n        <div className=\"uk-navbar-item\">\r\n          <button\r\n            className={favoritePosts.length ? \"uk-button favorite-active\" : \"uk-button\"}\r\n            type=\"button\"\r\n            uk-icon=\"icon: heart; ratio: 2\"\r\n          ></button>\r\n          <div className=\"uk-width-large\" uk-dropdown=\"mode: click\">\r\n            <div\r\n              className=\"uk-dropdown-grid uk-child-width-1-1@m\"\r\n              uk-grid=\"true\"\r\n            >\r\n              <div>\r\n                <table className=\"uk-table uk-table-divider uk-table-justify\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Title</th>\r\n                      <th className=\"uk-text-right\">Delete</th>\r\n                    </tr>\r\n                  </thead>\r\n                  {\r\n                    favoritePosts.map((post) => (\r\n                      <Favorite\r\n                        key={post.id}\r\n                        title={post.title}\r\n                        id={post.id}\r\n                        toggleFavorite={toggleFavorite}\r\n                      />\r\n                    ))\r\n                  }\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}","import { Pagination } from \"../Pagination/Pagination\"\r\nimport { usePostsContext } from \"../../PostsContext\";\r\nimport AlbumsCard from \"../Albums/AlbumsCard/AlbumsCard\";\r\nimport { LMButton } from \"../LMButton/LMButton\";\r\nimport { Navigation } from \"../Navigation/Navigation\";\r\n\r\nexport function Albums() {\r\n  const { currentPosts, toggleFavorite } = usePostsContext();\r\n  return (\r\n    <main className=\"uk-main\">\r\n      <Navigation />\r\n      <div className=\"uk-section\">\r\n        <div className=\"uk-container\">\r\n          <div className=\"uk-grid uk-child-width-1-2@s uk-child-width-1-3@m\">\r\n            {\r\n              currentPosts?.map((post) => (\r\n                <AlbumsCard key={post.id}\r\n                  id={post.id}\r\n                  body={post.body}\r\n                  toggleFavorite={toggleFavorite}\r\n                  favorite={post.favorite}\r\n                />\r\n              ))\r\n            }\r\n          </div>\r\n          <LMButton />\r\n          <Pagination />\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction Comments({ author, email, commentTitle }) {\r\n  return (\r\n    <div className=\"uk-comments\">\r\n      <article className=\"uk-comment\">\r\n        <header className=\"uk-comment-header uk-grid uk-grid-medium uk-flex-middle\">\r\n          <div className=\"uk-width-expand\">\r\n            <h4 className=\"uk-comment-title uk-margin-remove\">\r\n              <a className=\"uk-link-reset\" href=\"#\">\r\n                Author: {author}\r\n              </a>\r\n            </h4>\r\n            <ul className=\"uk-comment-meta uk-subnav uk-subnav-divider uk-margin-remove-top\">\r\n              <li>\r\n                <a href=\"#\">Email: {email}</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </header>\r\n        <div className=\"uk-comment-body\">\r\n          <p>\r\n            {commentTitle}\r\n          </p>\r\n        </div>\r\n      </article>\r\n    </div>\r\n  )\r\n}\r\n\r\nComments.propTypes = {\r\n  author: PropTypes.string,\r\n  email: PropTypes.string,\r\n  commentTitle: PropTypes.string,\r\n}\r\n\r\nexport default Comments;","import \"./Post.css\";\r\nimport { Navigation } from \"../Navigation/Navigation\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Comments from \"./Comments/Comments\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { createCommentRequest, getCommentsRequest } from \"../../api\";\r\n\r\nexport function Post(props) {\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [commentTitle, setCommentTitle] = useState(\"\");\r\n\r\n  const onAddAuthor = (e) => (setAuthor(e.target.value));\r\n\r\n  const onAddEmail = (e) => (setEmail(e.target.value));\r\n\r\n  const onAddComment = (e) => (setCommentTitle(e.target.value));\r\n\r\n  const onClickDataSend = (e) => {\r\n    e.preventDefault()\r\n    addNewComment({\r\n      id: Date.now(),\r\n      author: author,\r\n      email: email,\r\n      commentTitle: commentTitle\r\n    })\r\n    setAuthor(\"\");\r\n    setEmail(\"\");\r\n    setCommentTitle(\"\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCommentsRequest().then((newComments) => setComments(newComments));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (comments.comment !== comments.comment) {\r\n      createCommentRequest(comment);\r\n    }\r\n  }, []);\r\n\r\n  const addNewComment = async (comment) => {\r\n    if (comment.commentTitle.trim() && comment.email.trim() && comment.author.trim()) {\r\n      const newComment = await createCommentRequest(comment);\r\n      setComments([...comments, newComment]);\r\n    }\r\n  }\r\n\r\n  const onKeyPressDefault = (e) => {\r\n    if (e.charCode === 13) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n  return (\r\n    <main className=\"uk-main\">\r\n      <Navigation />\r\n      <div className=\"uk-section\">\r\n        <div className=\"uk-container\">\r\n          <h1 className=\"uk-heading-bullet uk-margin-medium-bottom\">\r\n            <span>{props.location.postTitle === undefined ? <Redirect to=\"/\" /> : props.location.postTitle}\r\n            </span>\r\n            <a className=\"uk-text-small\" href=\"#\"> Author\r\n            </a>\r\n          </h1>\r\n          <div className=\"uk-article uk-dropcap uk-margin-large-bottom\">\r\n            <p>\r\n              {props.location.postBody === undefined ? <Redirect to=\"/\" /> : props.location.postBody}.\r\n            </p>\r\n          </div>\r\n          <hr />\r\n          <h3 className=\"uk-margin-remove-top\">Comments:</h3>\r\n          {comments?.map((comment) => (\r\n            <Comments\r\n              key={comment.id}\r\n              id={comment.id}\r\n              author={comment.author}\r\n              email={comment.email}\r\n              commentTitle={comment.commentTitle}\r\n            />\r\n          ))}\r\n          <hr />\r\n          <form action=\"#\" className=\"uk-comment-form uk-margin-medium-top\">\r\n            <fieldset className=\"uk-fieldset\">\r\n              <legend className=\"uk-legend\">Add Comment</legend>\r\n              <div className=\"uk-margin\">\r\n                <input\r\n                  className=\"uk-input\"\r\n                  type=\"text\"\r\n                  placeholder=\"Name\"\r\n                  required\r\n                  value={author}\r\n                  onChange={onAddAuthor}\r\n                  onKeyPress={onKeyPressDefault}\r\n                />\r\n              </div>\r\n              <div className=\"uk-margin\">\r\n                <input\r\n                  className=\"uk-input\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  required\r\n                  value={email}\r\n                  onChange={onAddEmail}\r\n                  onKeyPress={onKeyPressDefault}\r\n                />\r\n              </div>\r\n              <div className=\"uk-margin\">\r\n                <textarea\r\n                  className=\"uk-textarea\"\r\n                  rows=\"5\"\r\n                  placeholder=\"Comment\"\r\n                  required\r\n                  value={commentTitle}\r\n                  onChange={onAddComment}\r\n                ></textarea>\r\n              </div>\r\n              <div className=\"uk-margin\">\r\n                <button className=\"uk-button uk-button-primary\" type=\"submit\"\r\n                  onClick={onClickDataSend}>\r\n                  Post Comment\r\n                </button>\r\n              </div>\r\n            </fieldset>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport function PostscardPosts({ title, body, id }) {\r\n  return (\r\n\r\n    <div>\r\n      <NavLink to={{ pathname: \"/Post/\" + id, postTitle: title, postBody: body }}\r\n        className=\"uk-card uk-card-default uk-margin-medium-bottom uk-child-width-1-2@s uk-grid-collapse uk-margin\"\r\n        uk-grid=\"true\"\r\n      >\r\n        <div className=\"uk-card-media-left uk-cover-container\">\r\n          <img\r\n            src=\"https://picsum.photos/600/400\"\r\n            alt=\"\"\r\n            uk-cover=\"true\"\r\n          />\r\n          <canvas width=\"600\" height=\"400\"></canvas>\r\n        </div>\r\n        <div>\r\n          <div className=\"uk-card-body\">\r\n            <h3 className=\"uk-card-title\">{title}</h3>\r\n            <p>\r\n              {body}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nPostscardPosts.propTypes = {\r\n  body: PropTypes.string,\r\n  title: PropTypes.string,\r\n}\r\n\r\nexport default PostscardPosts;","import { useState } from \"react\";\r\nimport { usePostsContext } from \"../../PostsContext\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport function Filters() {\r\n  const { getSortPostsRequest, setQuantityPosts, getSearchPostsRequest } = usePostsContext();\r\n  const [name, setName] = useState(\"\");\r\n  const [orderValue, setOrderValue] = useState(\"asc\");\r\n\r\n  const onInputValueChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.value.trim()) {\r\n      getSearchPostsRequest(e.target.value);\r\n    } else if (e.target.value === \"\") {\r\n      getSortPostsRequest(orderValue);\r\n    }\r\n    setName(e.target.value);\r\n  }\r\n\r\n  const onPostsOrderChange = (e) => {\r\n    getSortPostsRequest(e.target.value);\r\n    setOrderValue(e.target.value);\r\n  }\r\n\r\n  const isActive = location.pathname;\r\n  return (\r\n    <div className=\"uk-margin-medium-bottom uk-flex\">\r\n      <form className=\"uk-search uk-search-default uk-width-medium uk-margin-remove uk-margin-right\">\r\n        <span uk-search-icon=\"true\"></span>\r\n        {name.trim() && <span\r\n          className=\"uk-search-icon uk-search-icon-flip\"\r\n          uk-spinner=\"ratio: 0.6\"\r\n        ></span>}\r\n        <input\r\n          value={name}\r\n          onChange={onInputValueChange}\r\n          className=\"uk-search-input\"\r\n          type=\"search\"\r\n          placeholder=\"Search...\"\r\n        />\r\n      </form>\r\n      <select className=\"uk-select uk-width-small uk-margin-auto-left\" onChange={onPostsOrderChange}>\r\n        <option value=\"asc\">ASC</option>\r\n        <option value=\"desc\">DESC</option>\r\n      </select>\r\n      <select className=\"uk-select uk-width-small uk-margin-left\" onChange={(e) => setQuantityPosts(e.target.value)}>\r\n        <option value=\"6\">6</option>\r\n        <option value=\"12\">12</option>\r\n        <option value=\"24\">24</option>\r\n      </select>\r\n      <div className=\"uk-button-group uk-margin-left\">\r\n        <NavLink to=\"/\"\r\n          activeClassName={isActive === \"/\" ? \"uk-active\" : \"\"}\r\n          className=\"uk-button uk-button-default\" >\r\n          <span uk-icon=\"icon:  grid\"></span>\r\n        </NavLink>\r\n        <NavLink to=\"/Posts\"\r\n          activeClassName={isActive === \"/Posts\" ? \"uk-active\" : \"\"}\r\n          className=\"uk-button uk-button-default\" >\r\n          <span uk-icon=\"icon:  list\"></span>\r\n        </NavLink>\r\n      </div>\r\n    </div >\r\n  )\r\n}","import { Pagination } from \"../Pagination/Pagination\";\r\nimport { usePostsContext } from \"../../PostsContext\";\r\nimport PostscardPosts from \"../Posts/PostscardPosts/PostscardPosts\";\r\nimport { Filters } from \"../Filters/Filters\";\r\n\r\nexport function Posts() {\r\n  const { currentPosts } = usePostsContext();\r\n  return (\r\n    <main className=\"uk-main\">\r\n      <div className=\"uk-section\">\r\n        <div className=\"uk-container\">\r\n          <Filters />\r\n          <div className=\"uk-grid uk-child-width-1-2@s uk-child-width-1-2@m\">\r\n            {\r\n              currentPosts?.map((post) => (\r\n                <PostscardPosts key={post.id}\r\n                  title={post.title}\r\n                  id={post.id}\r\n                  body={post.body}\r\n                />\r\n              ))\r\n            }\r\n          </div>\r\n          <Pagination />\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport \"./PostscardPostsgrid.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction PostscardPostsgrid({ body, title, id, toggleFavorite, favorite }) {\r\n  const onClickFavorite = (e) => {\r\n    e.preventDefault();\r\n    toggleFavorite(id);\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"uk-card uk-card-default uk-margin-medium-bottom\">\r\n        <div className=\"uk-card-header\">\r\n          <h3 className=\"uk-card-title uk-margin-remove-bottom uk-flex uk-flex-middle uk-flex-between\">\r\n            {title}\r\n            <a href=\"/\" className={favorite === true ? \"uk-icon-link favorite-active\" : \"uk-icon-link\"} uk-icon=\"heart\" onClick={onClickFavorite}></a>\r\n          </h3>\r\n        </div>\r\n        <div className=\"uk-card-body\">\r\n          <p>\r\n            {body}\r\n          </p>\r\n        </div>\r\n        <div className=\"uk-card-footer\">\r\n          <NavLink to={{ pathname: \"/Post/\" + id, postTitle: title, postBody: body }} className=\"uk-button uk-button-text\" >\r\n            Read more\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nPostscardPostsgrid.propTypes = {\r\n  id: PropTypes.number,\r\n  title: PropTypes.string,\r\n  body: PropTypes.string,\r\n  favorite: PropTypes.bool,\r\n  toggleFavorite: PropTypes.func\r\n}\r\n\r\nexport default PostscardPostsgrid;","import { Pagination } from \"../Pagination/Pagination\";\r\nimport { usePostsContext } from \"../../PostsContext\";\r\nimport PostscardPostsgrid from \"../Postsgrid/PostscardPostsgrid/PostscardPostsgrid\";\r\nimport { Filters } from \"../Filters/Filters\";\r\nimport { LMButton } from \"../LMButton/LMButton\";\r\nimport { Navigation } from \"../Navigation/Navigation\";\r\n\r\nexport function Postsgrid() {\r\n  const { currentPosts, toggleFavorite } = usePostsContext();\r\n  return (\r\n    <main className=\"uk-main\">\r\n      <Navigation />\r\n      <div className=\"uk-section\">\r\n        <div className=\"uk-container\">\r\n          <Filters />\r\n          <div className=\"uk-grid uk-child-width-1-2@s uk-child-width-1-3@m\">\r\n            {\r\n              currentPosts?.map((post) => (\r\n                <PostscardPostsgrid key={post.id}\r\n                  title={post.title}\r\n                  id={post.id}\r\n                  body={post.body}\r\n                  toggleFavorite={toggleFavorite}\r\n                  favorite={post.favorite}\r\n                />\r\n              ))\r\n            }\r\n          </div>\r\n          <LMButton />\r\n          <Pagination />\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport \"./PostscardPostsLists.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction PostscardPostsLists({ body, title, id, toggleFavorite, favorite }) {\r\n  const onClickFavorite = (e) => {\r\n    e.preventDefault();\r\n    toggleFavorite(id);\r\n  }\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"uk-card uk-card-default uk-margin-medium-bottom uk-child-width-1-2@s uk-grid-collapse uk-margin\"\r\n        uk-grid=\"true\"\r\n      >\r\n        <div className=\"uk-card-media-left uk-cover-container\">\r\n          <img src=\"https://picsum.photos/600/400\" alt=\"\" uk-cover=\"true\" />\r\n          <canvas width=\"600\" height=\"400\"></canvas>\r\n        </div>\r\n        <div>\r\n          <div className=\"uk-card-body\">\r\n            <h3 className=\"uk-card-title uk-margin-remove-bottom uk-flex uk-flex-middle uk-flex-between\">\r\n              {title} <a href=\"/\" className={favorite === true ? \"uk-icon-link favorite-active\" : \"uk-icon-link\"} uk-icon=\"heart\" onClick={onClickFavorite}></a>\r\n            </h3>\r\n            <p>\r\n              {body}\r\n            </p>\r\n            <NavLink to={{ pathname: \"/Post/\" + id, postTitle: title, postBody: body }} className=\"uk-button uk-button-text\" >\r\n              Read more\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nPostscardPostsLists.propTypes = {\r\n  id: PropTypes.number,\r\n  title: PropTypes.string,\r\n  body: PropTypes.string,\r\n  favorite: PropTypes.bool,\r\n  toggleFavorite: PropTypes.func\r\n}\r\n\r\nexport default PostscardPostsLists;","import { usePostsContext } from \"../../PostsContext\";\r\nimport PostscardPostsLists from \"../Postslists/PostscardPostsLists/PostscardPostsLists\";\r\nimport { Pagination } from \"../Pagination/Pagination\";\r\nimport { Filters } from \"../Filters/Filters\";\r\nimport { LMButton } from \"../LMButton/LMButton\";\r\nimport { Navigation } from \"../Navigation/Navigation\";\r\n\r\nexport function Postslists() {\r\n  const { currentPosts, toggleFavorite } = usePostsContext();\r\n  return (\r\n    <main className=\"uk-main\">\r\n      <Navigation />\r\n      <div className=\"uk-section\">\r\n        <div className=\"uk-container\">\r\n          <Filters />\r\n          <div className=\"uk-grid uk-child-width-1-2@s uk-child-width-1-2@m\">\r\n            {\r\n              currentPosts?.map((post) => {\r\n                return <PostscardPostsLists key={post.id}\r\n                  title={post.title}\r\n                  id={post.id}\r\n                  body={post.body}\r\n                  toggleFavorite={toggleFavorite}\r\n                  favorite={post.favorite}\r\n                />\r\n              })\r\n            }\r\n          </div>\r\n          <LMButton />\r\n          <Pagination />\r\n        </div>\r\n      </div >\r\n    </main >\r\n  )\r\n}\r\n","import \"uikit/dist/css/uikit.css\";\nimport Uikit from \"uikit\";\nimport Icons from \"uikit/dist/js/uikit-icons\";\nUikit.use(Icons);\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { Albums } from \"./components/Albums/Albums\";\nimport { Post } from \"./components/Post/Post\";\nimport { Posts } from \"./components/Posts/Posts\";\nimport { Postsgrid } from \"./components/Postsgrid/Postsgrid\";\nimport { Postslists } from \"./components/Postslists/PostsLists\";\nimport { PostsProvider } from \"./PostsContext\";\n\nexport default function App() {\n\n  return (\n    <PostsProvider>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Postslists} />\n          <Route exact path=\"/Postsgrid\" component={Postsgrid} />\n          <Route exact path=\"/Albums\" component={Albums} />\n          <Route exact path=\"/Posts\" component={Posts} />\n          <Route exact path=\"/Post/:id\" component={Post} />\n        </Switch>\n      </BrowserRouter>\n    </PostsProvider>\n  );\n}\n","import { StrictMode } from \"react\";\n\nimport ReactDOM from \"react-dom\";\nimport Uikit from \"uikit\";\nimport Icons from \"uikit/dist/js/uikit-icons\";\nimport \"uikit/dist/css/uikit.css\";\nimport App from \"./App\";\nUikit.use(Icons);\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}